2025-03-04 13:04:22,769 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:04:22,770 - supabase_validation_manager - INFO - supabase_validation_manager.py:49 - Supabase Validation Manager initialized
2025-03-04 13:04:22,792 - werkzeug - INFO - _internal.py:224 -  * Running on http://127.0.0.1:5000 (Press CTRL+C to quit)
2025-03-04 13:04:22,796 - werkzeug - INFO - _internal.py:224 -  * Restarting with stat
2025-03-04 13:04:26,101 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:04:26,101 - supabase_validation_manager - INFO - supabase_validation_manager.py:49 - Supabase Validation Manager initialized
2025-03-04 13:04:26,117 - werkzeug - WARNING - _internal.py:224 -  * Debugger is active!
2025-03-04 13:04:26,126 - werkzeug - INFO - _internal.py:224 -  * Debugger PIN: 121-941-094
2025-03-04 13:09:28,482 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:09:28] "[33mOPTIONS /api/profile-history?table=employees&limit=15 HTTP/1.1[0m" 404 -
2025-03-04 13:09:28,517 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:09:28] "[33mOPTIONS /api/profile-history?table=employees&limit=15 HTTP/1.1[0m" 404 -
2025-03-04 13:10:08,841 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:10:08] "OPTIONS /api/profile?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fbackend%2Fmy_database.duckdb&table=employees HTTP/1.1" 200 -
2025-03-04 13:10:09,164 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:10:09,165 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:10:12,060 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:10:12,062 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:10:14,230 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:10:14,662 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:10:14,664 - root - INFO - app.py:218 - ========== PROFILING STARTED ==========
2025-03-04 13:10:14,664 - root - INFO - app.py:219 - Profiling table employees with connection duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/backend/my_database.duckdb
2025-03-04 13:10:14,664 - root - INFO - app.py:220 - User ID: 0a2b31f7-ac94-483c-8721-a88f5db9d296, Organization ID: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b
2025-03-04 13:10:16,911 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:10:16,911 - supabase_profile_history - INFO - supabase_profile_history.py:49 - Supabase Profile History Manager initialized
2025-03-04 13:10:16,911 - root - INFO - app.py:224 - Created SupabaseProfileHistoryManager
2025-03-04 13:10:19,528 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiling_history?select=data&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees&order=collected_at.desc&limit=1 "HTTP/1.1 200 OK"
2025-03-04 13:10:19,528 - root - INFO - app.py:228 - Previous profile found: True
2025-03-04 13:10:19,861 - root - ERROR - app.py:250 - Error profiling table: (duckdb.duckdb.IOException) IO Error: Cannot open file "c:\users\mhard\pycharmprojects\sparvidata\backend\my_database.duckdb": The system cannot find the path specified.

(Background on this error at: https://sqlalche.me/e/14/e3q8)
2025-03-04 13:10:20,095 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:10:20] "[35m[1mGET /api/profile?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fbackend%2Fmy_database.duckdb&table=employees HTTP/1.1[0m" 500 -
2025-03-04 13:12:16,313 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:16] "OPTIONS /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fbackend%2Fmy_database.duckdb HTTP/1.1" 200 -
2025-03-04 13:12:16,571 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:12:16,572 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:12:18,681 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:12:18,682 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:12:19,571 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:19] "OPTIONS /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2F%2Fbackend%2Fmy_database.duckdb HTTP/1.1" 200 -
2025-03-04 13:12:19,878 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:12:19,879 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:12:20,350 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:12:20,566 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:12:20,567 - root - INFO - app.py:399 - Getting tables for connection: duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/backend/my_database.duckdb
2025-03-04 13:12:20,580 - root - ERROR - app.py:414 - Error getting tables: (duckdb.duckdb.IOException) IO Error: Cannot open file "c:\users\mhard\pycharmprojects\sparvidata\backend\my_database.duckdb": The system cannot find the path specified.

(Background on this error at: https://sqlalche.me/e/14/e3q8)
2025-03-04 13:12:20,598 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:20] "[35m[1mGET /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fbackend%2Fmy_database.duckdb HTTP/1.1[0m" 500 -
2025-03-04 13:12:20,745 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:20] "OPTIONS /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fs%2Fbackend%2Fmy_database.duckdb HTTP/1.1" 200 -
2025-03-04 13:12:20,861 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:20] "OPTIONS /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsp%2Fbackend%2Fmy_database.duckdb HTTP/1.1" 200 -
2025-03-04 13:12:20,965 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:20] "OPTIONS /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fspa%2Fbackend%2Fmy_database.duckdb HTTP/1.1" 200 -
2025-03-04 13:12:21,061 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:12:21,062 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:12:21,079 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:21] "OPTIONS /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fspar%2Fbackend%2Fmy_database.duckdb HTTP/1.1" 200 -
2025-03-04 13:12:21,178 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:12:21,178 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:12:21,280 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:21] "OPTIONS /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparv%2Fbackend%2Fmy_database.duckdb HTTP/1.1" 200 -
2025-03-04 13:12:21,284 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:12:21,284 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:12:21,412 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:21] "OPTIONS /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparvi%2Fbackend%2Fmy_database.duckdb HTTP/1.1" 200 -
2025-03-04 13:12:21,649 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:12:21,655 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:12:21,852 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:12:21,888 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:12:22,570 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:12:22,574 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:12:25,504 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:12:25,507 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:12:25,642 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:12:25,648 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:12:25,830 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:12:25,841 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:12:26,042 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:12:26,051 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:12:26,215 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:12:26,229 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:12:26,704 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:12:26,927 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:12:26,945 - root - INFO - app.py:399 - Getting tables for connection: duckdb:///C:/Users/mhard/PycharmProjects/sparvidata//backend/my_database.duckdb
2025-03-04 13:12:26,971 - root - ERROR - app.py:414 - Error getting tables: (duckdb.duckdb.IOException) IO Error: Cannot open file "c:\users\mhard\pycharmprojects\sparvidata\\backend\my_database.duckdb": The system cannot find the path specified.

(Background on this error at: https://sqlalche.me/e/14/e3q8)
2025-03-04 13:12:29,323 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:12:29,506 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:12:29,535 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:12:29,570 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:29] "[35m[1mGET /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2F%2Fbackend%2Fmy_database.duckdb HTTP/1.1[0m" 500 -
2025-03-04 13:12:29,779 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:12:29,796 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:12:29,839 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:12:29,840 - root - INFO - app.py:399 - Getting tables for connection: duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/s/backend/my_database.duckdb
2025-03-04 13:12:29,851 - root - ERROR - app.py:414 - Error getting tables: (duckdb.duckdb.IOException) IO Error: Cannot open file "c:\users\mhard\pycharmprojects\sparvidata\s\backend\my_database.duckdb": The system cannot find the path specified.

(Background on this error at: https://sqlalche.me/e/14/e3q8)
2025-03-04 13:12:29,857 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:12:29,859 - root - INFO - app.py:399 - Getting tables for connection: duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sp/backend/my_database.duckdb
2025-03-04 13:12:29,870 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:29] "[35m[1mGET /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fs%2Fbackend%2Fmy_database.duckdb HTTP/1.1[0m" 500 -
2025-03-04 13:12:29,874 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:12:29,875 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:12:29,877 - root - ERROR - app.py:414 - Error getting tables: (duckdb.duckdb.IOException) IO Error: Cannot open file "c:\users\mhard\pycharmprojects\sparvidata\sp\backend\my_database.duckdb": The system cannot find the path specified.

(Background on this error at: https://sqlalche.me/e/14/e3q8)
2025-03-04 13:12:29,888 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:29] "[35m[1mGET /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsp%2Fbackend%2Fmy_database.duckdb HTTP/1.1[0m" 500 -
2025-03-04 13:12:29,949 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:12:29,950 - root - INFO - app.py:399 - Getting tables for connection: duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/spa/backend/my_database.duckdb
2025-03-04 13:12:29,961 - root - ERROR - app.py:414 - Error getting tables: (duckdb.duckdb.IOException) IO Error: Cannot open file "c:\users\mhard\pycharmprojects\sparvidata\spa\backend\my_database.duckdb": The system cannot find the path specified.

(Background on this error at: https://sqlalche.me/e/14/e3q8)
2025-03-04 13:12:29,972 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:29] "[35m[1mGET /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fspa%2Fbackend%2Fmy_database.duckdb HTTP/1.1[0m" 500 -
2025-03-04 13:12:29,982 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:12:29,983 - root - INFO - app.py:399 - Getting tables for connection: duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparv/backend/my_database.duckdb
2025-03-04 13:12:30,007 - root - ERROR - app.py:414 - Error getting tables: (duckdb.duckdb.IOException) IO Error: Cannot open file "c:\users\mhard\pycharmprojects\sparvidata\sparv\backend\my_database.duckdb": The system cannot find the path specified.

(Background on this error at: https://sqlalche.me/e/14/e3q8)
2025-03-04 13:12:30,018 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:30] "[35m[1mGET /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparv%2Fbackend%2Fmy_database.duckdb HTTP/1.1[0m" 500 -
2025-03-04 13:12:30,107 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:12:30,109 - root - INFO - app.py:399 - Getting tables for connection: duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/spar/backend/my_database.duckdb
2025-03-04 13:12:30,118 - root - ERROR - app.py:414 - Error getting tables: (duckdb.duckdb.IOException) IO Error: Cannot open file "c:\users\mhard\pycharmprojects\sparvidata\spar\backend\my_database.duckdb": The system cannot find the path specified.

(Background on this error at: https://sqlalche.me/e/14/e3q8)
2025-03-04 13:12:30,142 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:30] "[35m[1mGET /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fspar%2Fbackend%2Fmy_database.duckdb HTTP/1.1[0m" 500 -
2025-03-04 13:12:30,194 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:30] "OPTIONS /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparvic%2Fbackend%2Fmy_database.duckdb HTTP/1.1" 200 -
2025-03-04 13:12:30,196 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:30] "OPTIONS /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparvi%3D%2Fbackend%2Fmy_database.duckdb HTTP/1.1" 200 -
2025-03-04 13:12:30,277 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:30] "OPTIONS /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparvi-%2Fbackend%2Fmy_database.duckdb HTTP/1.1" 200 -
2025-03-04 13:12:30,327 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:30] "OPTIONS /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparvi-c%2Fbackend%2Fmy_database.duckdb HTTP/1.1" 200 -
2025-03-04 13:12:30,458 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:30] "OPTIONS /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparvi-cl%2Fbackend%2Fmy_database.duckdb HTTP/1.1" 200 -
2025-03-04 13:12:30,501 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:30] "OPTIONS /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparvi-clo%2Fbackend%2Fmy_database.duckdb HTTP/1.1" 200 -
2025-03-04 13:12:30,502 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:30] "OPTIONS /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparvi-clou%2Fbackend%2Fmy_database.duckdb HTTP/1.1" 200 -
2025-03-04 13:12:30,594 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:30] "OPTIONS /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparvi-cloud%2Fbackend%2Fmy_database.duckdb HTTP/1.1" 200 -
2025-03-04 13:12:30,636 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:30] "[33mOPTIONS /api/profile-history?table=employees&limit=15 HTTP/1.1[0m" 404 -
2025-03-04 13:12:30,778 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:12:30,778 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:12:30,809 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:12:30,810 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:12:30,815 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:12:30,816 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:12:30,924 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:12:30,946 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:12:30,982 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:12:31,006 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:12:32,761 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:12:32,778 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:12:35,377 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:12:35,378 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:12:35,394 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:12:35,397 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:12:35,480 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:12:35,493 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:12:35,498 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:12:35,499 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:12:35,507 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:12:35,508 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:12:37,090 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:12:37,308 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:12:37,323 - root - INFO - app.py:399 - Getting tables for connection: duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi/backend/my_database.duckdb
2025-03-04 13:12:37,354 - root - ERROR - app.py:414 - Error getting tables: (duckdb.duckdb.IOException) IO Error: Cannot open file "c:\users\mhard\pycharmprojects\sparvidata\sparvi\backend\my_database.duckdb": The system cannot find the path specified.

(Background on this error at: https://sqlalche.me/e/14/e3q8)
2025-03-04 13:12:38,263 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:38] "[35m[1mGET /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparvi%2Fbackend%2Fmy_database.duckdb HTTP/1.1[0m" 500 -
2025-03-04 13:12:38,729 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:12:38,737 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:12:39,637 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:12:39,758 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:12:39,828 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:12:39,863 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:12:39,867 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:12:39,957 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:12:39,958 - root - INFO - app.py:399 - Getting tables for connection: duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi-c/backend/my_database.duckdb
2025-03-04 13:12:39,970 - root - ERROR - app.py:414 - Error getting tables: (duckdb.duckdb.IOException) IO Error: Cannot open file "c:\users\mhard\pycharmprojects\sparvidata\sparvi-c\backend\my_database.duckdb": The system cannot find the path specified.

(Background on this error at: https://sqlalche.me/e/14/e3q8)
2025-03-04 13:12:39,971 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:12:39,972 - root - INFO - app.py:399 - Getting tables for connection: duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvic/backend/my_database.duckdb
2025-03-04 13:12:39,983 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:39] "[35m[1mGET /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparvi-c%2Fbackend%2Fmy_database.duckdb HTTP/1.1[0m" 500 -
2025-03-04 13:12:39,985 - root - ERROR - app.py:414 - Error getting tables: (duckdb.duckdb.IOException) IO Error: Cannot open file "c:\users\mhard\pycharmprojects\sparvidata\sparvic\backend\my_database.duckdb": The system cannot find the path specified.

(Background on this error at: https://sqlalche.me/e/14/e3q8)
2025-03-04 13:12:40,009 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:40] "[35m[1mGET /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparvic%2Fbackend%2Fmy_database.duckdb HTTP/1.1[0m" 500 -
2025-03-04 13:12:40,060 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:12:40,061 - root - INFO - app.py:399 - Getting tables for connection: duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi=/backend/my_database.duckdb
2025-03-04 13:12:40,070 - root - ERROR - app.py:414 - Error getting tables: (duckdb.duckdb.IOException) IO Error: Cannot open file "c:\users\mhard\pycharmprojects\sparvidata\sparvi=\backend\my_database.duckdb": The system cannot find the path specified.

(Background on this error at: https://sqlalche.me/e/14/e3q8)
2025-03-04 13:12:40,081 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:40] "[35m[1mGET /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparvi%3D%2Fbackend%2Fmy_database.duckdb HTTP/1.1[0m" 500 -
2025-03-04 13:12:40,084 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:12:40,085 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:12:40,086 - root - INFO - app.py:399 - Getting tables for connection: duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi-/backend/my_database.duckdb
2025-03-04 13:12:40,087 - root - INFO - app.py:399 - Getting tables for connection: duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi-cl/backend/my_database.duckdb
2025-03-04 13:12:40,099 - root - ERROR - app.py:414 - Error getting tables: (duckdb.duckdb.IOException) IO Error: Cannot open file "c:\users\mhard\pycharmprojects\sparvidata\sparvi-cl\backend\my_database.duckdb": The system cannot find the path specified.

(Background on this error at: https://sqlalche.me/e/14/e3q8)
2025-03-04 13:12:40,114 - root - ERROR - app.py:414 - Error getting tables: (duckdb.duckdb.IOException) IO Error: Cannot open file "c:\users\mhard\pycharmprojects\sparvidata\sparvi-\backend\my_database.duckdb": The system cannot find the path specified.

(Background on this error at: https://sqlalche.me/e/14/e3q8)
2025-03-04 13:12:40,139 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:40] "[35m[1mGET /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparvi-cl%2Fbackend%2Fmy_database.duckdb HTTP/1.1[0m" 500 -
2025-03-04 13:12:40,148 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:40] "[35m[1mGET /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparvi-%2Fbackend%2Fmy_database.duckdb HTTP/1.1[0m" 500 -
2025-03-04 13:12:40,293 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:12:40,293 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:12:40,327 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:12:40,327 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:12:40,397 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:12:40,398 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:12:42,159 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:12:42,170 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:12:43,577 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:12:43,578 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:12:43,584 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:12:43,586 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:12:43,645 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:12:43,649 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:12:43,649 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:12:43,650 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:12:45,306 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:12:45,641 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:12:45,649 - root - INFO - app.py:399 - Getting tables for connection: duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi-clo/backend/my_database.duckdb
2025-03-04 13:12:45,679 - root - ERROR - app.py:414 - Error getting tables: (duckdb.duckdb.IOException) IO Error: Cannot open file "c:\users\mhard\pycharmprojects\sparvidata\sparvi-clo\backend\my_database.duckdb": The system cannot find the path specified.

(Background on this error at: https://sqlalche.me/e/14/e3q8)
2025-03-04 13:12:46,062 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:46] "[35m[1mGET /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparvi-clo%2Fbackend%2Fmy_database.duckdb HTTP/1.1[0m" 500 -
2025-03-04 13:12:46,883 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:12:46,957 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:12:47,004 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:12:47,043 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:12:47,045 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:12:47,090 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:12:47,091 - root - INFO - app.py:399 - Getting tables for connection: duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi-cloud/backend/my_database.duckdb
2025-03-04 13:12:47,183 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:12:47,184 - root - INFO - app.py:399 - Getting tables for connection: duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi/backend/my_database.duckdb
2025-03-04 13:12:47,197 - root - ERROR - app.py:414 - Error getting tables: (duckdb.duckdb.IOException) IO Error: Cannot open file "c:\users\mhard\pycharmprojects\sparvidata\sparvi\backend\my_database.duckdb": The system cannot find the path specified.

(Background on this error at: https://sqlalche.me/e/14/e3q8)
2025-03-04 13:12:47,205 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:12:47,205 - root - INFO - app.py:399 - Getting tables for connection: duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi-clou/backend/my_database.duckdb
2025-03-04 13:12:47,206 - root - INFO - app.py:410 - Found 2 tables
2025-03-04 13:12:47,220 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:47] "GET /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparvi-cloud%2Fbackend%2Fmy_database.duckdb HTTP/1.1" 200 -
2025-03-04 13:12:47,221 - root - ERROR - app.py:414 - Error getting tables: (duckdb.duckdb.IOException) IO Error: Cannot open file "c:\users\mhard\pycharmprojects\sparvidata\sparvi-clou\backend\my_database.duckdb": The system cannot find the path specified.

(Background on this error at: https://sqlalche.me/e/14/e3q8)
2025-03-04 13:12:47,246 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:47] "[35m[1mGET /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparvi%2Fbackend%2Fmy_database.duckdb HTTP/1.1[0m" 500 -
2025-03-04 13:12:47,267 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:47] "[35m[1mGET /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparvi-clou%2Fbackend%2Fmy_database.duckdb HTTP/1.1[0m" 500 -
2025-03-04 13:12:47,529 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:12:47,530 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:12:49,327 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:12:49,519 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:12:49,520 - root - INFO - app.py:399 - Getting tables for connection: duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi/backend/my_database.duckdb
2025-03-04 13:12:49,530 - root - ERROR - app.py:414 - Error getting tables: (duckdb.duckdb.IOException) IO Error: Cannot open file "c:\users\mhard\pycharmprojects\sparvidata\sparvi\backend\my_database.duckdb": The system cannot find the path specified.

(Background on this error at: https://sqlalche.me/e/14/e3q8)
2025-03-04 13:12:49,551 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:49] "[35m[1mGET /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparvi%2Fbackend%2Fmy_database.duckdb HTTP/1.1[0m" 500 -
2025-03-04 13:12:49,898 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:12:49,898 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:12:52,113 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:12:52,346 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:12:52,348 - root - INFO - app.py:399 - Getting tables for connection: duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi-cloud/backend/my_database.duckdb
2025-03-04 13:12:52,366 - root - INFO - app.py:410 - Found 2 tables
2025-03-04 13:12:52,371 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:12:52] "GET /api/tables?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparvi-cloud%2Fbackend%2Fmy_database.duckdb HTTP/1.1" 200 -
2025-03-04 13:13:07,789 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:13:07] "[33mOPTIONS /api/profile-history?table=employees&limit=15 HTTP/1.1[0m" 404 -
2025-03-04 13:13:07,789 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:13:07] "[33mOPTIONS /api/profile-history?table=employees&limit=15 HTTP/1.1[0m" 404 -
2025-03-04 13:13:18,972 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:13:18] "OPTIONS /api/profile?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparvi-cloud%2Fbackend%2Fmy_database.duckdb&table=employees HTTP/1.1" 200 -
2025-03-04 13:13:19,277 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:13:19,277 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:13:21,143 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:13:21,143 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:13:22,893 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:13:23,109 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:13:23,109 - root - INFO - app.py:218 - ========== PROFILING STARTED ==========
2025-03-04 13:13:23,109 - root - INFO - app.py:219 - Profiling table employees with connection duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi-cloud/backend/my_database.duckdb
2025-03-04 13:13:23,109 - root - INFO - app.py:220 - User ID: 0a2b31f7-ac94-483c-8721-a88f5db9d296, Organization ID: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b
2025-03-04 13:13:24,727 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:13:24,727 - supabase_profile_history - INFO - supabase_profile_history.py:49 - Supabase Profile History Manager initialized
2025-03-04 13:13:24,727 - root - INFO - app.py:224 - Created SupabaseProfileHistoryManager
2025-03-04 13:13:26,577 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiling_history?select=data&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees&order=collected_at.desc&limit=1 "HTTP/1.1 200 OK"
2025-03-04 13:13:26,577 - root - INFO - app.py:228 - Previous profile found: True
2025-03-04 13:13:26,892 - root - INFO - app.py:233 - Profile completed with 15 keys
2025-03-04 13:13:26,892 - root - INFO - app.py:236 - About to save profile to Supabase
2025-03-04 13:13:26,892 - supabase_profile_history - INFO - supabase_profile_history.py:57 - Attempting to save profile for table employees to Supabase
2025-03-04 13:13:28,676 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiling_history "HTTP/1.1 201 Created"
2025-03-04 13:13:28,676 - supabase_profile_history - INFO - supabase_profile_history.py:95 - Successfully saved profile with ID ffd3461f-7e7d-4ac5-a4b7-d740bbe97cc0
2025-03-04 13:13:28,676 - root - INFO - app.py:238 - Profile save result: ffd3461f-7e7d-4ac5-a4b7-d740bbe97cc0
2025-03-04 13:13:30,509 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiling_history?select=collected_at%2C+data&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees&order=collected_at.desc&limit=10 "HTTP/1.1 200 OK"
2025-03-04 13:13:30,509 - supabase_profile_history - INFO - supabase_profile_history.py:248 - Retrieved trend data with 10 data points for 6 columns
2025-03-04 13:13:30,509 - root - INFO - app.py:244 - Added trends data with 10 points
2025-03-04 13:13:30,526 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:13:30] "GET /api/profile?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparvi-cloud%2Fbackend%2Fmy_database.duckdb&table=employees HTTP/1.1" 200 -
2025-03-04 13:13:30,542 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:13:30] "[33mOPTIONS /api/profile-history?table=employees&limit=15 HTTP/1.1[0m" 404 -
2025-03-04 13:13:30,995 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:13:30] "OPTIONS /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:13:30,995 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:13:30] "OPTIONS /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:13:31,247 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:13:31,247 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:13:33,095 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:13:33,095 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:13:34,489 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:13:34,690 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:13:34,690 - root - INFO - app.py:264 - Getting validation rules for organization: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees
2025-03-04 13:13:34,690 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 13:13:34,859 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 13:13:34,859 - root - INFO - app.py:266 - Retrieved 13 validation rules
2025-03-04 13:13:34,859 - root - DEBUG - app.py:267 - Rules content: [{'id': 'd62ba05c-31f7-49f9-8fb1-86cc59ff2d10', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_not_empty', 'description': 'Ensure employees table has at least one row', 'query': 'SELECT COUNT(*) FROM employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-03T17:52:54.83168+00:00'}, {'id': 'fd9b0fdb-4fe1-4064-931c-9e04e49f803f', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_row_growth', 'description': 'Detect unusual growth in employees row count (>20% change)', 'query': '\n            WITH current_count AS (\n                SELECT COUNT(*) as count FROM employees\n            ),\n            prev_count AS (\n                -- Replace with your historical count logic or reference table\n                SELECT \n                    CASE \n                        WHEN COUNT(*) = 0 THEN NULL \n                        ELSE COUNT(*) \n                    END as count \n                FROM employees\n            )\n            SELECT \n                CASE\n                    WHEN prev_count.count IS NULL THEN 0\n                    WHEN ABS(current_count.count - prev_count.count) > prev_count.count * 0.2 THEN 1\n                    ELSE 0\n                END\n            FROM current_count, prev_count\n        ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.457964+00:00'}, {'id': 'd7dfcb26-80c0-4aa8-9da5-c93f5e5ec589', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_unique', 'description': 'Check that id values are unique', 'query': '\n                    SELECT COUNT(*) FROM (\n                        SELECT id, COUNT(*) as count \n                        FROM employees \n                        WHERE id IS NOT NULL\n                        GROUP BY id \n                        HAVING COUNT(*) > 1\n                    ) AS duplicates\n                ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.550078+00:00'}, {'id': 'b37396e1-4806-4cc2-bbb8-66789b383f7b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_positive', 'description': 'Ensure id has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE id < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.676877+00:00'}, {'id': '90d3a101-d07a-4818-b73d-e880b889eb4b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_positive', 'description': 'Ensure salary has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.779642+00:00'}, {'id': 'f1fa2612-f11c-44dc-a0d2-92e99cb527d9', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_not_zero', 'description': 'Ensure salary has no zero values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary = 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.863703+00:00'}, {'id': '043839d3-6f15-4eec-9eb5-594168ed1592', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_hire_date_reasonable_past', 'description': 'Ensure hire_date contains no unreasonably old dates', 'query': "SELECT COUNT(*) FROM employees WHERE hire_date < '1970-01-01'", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.952874+00:00'}, {'id': '118a5eef-52b2-4fb4-8e01-20ec1d1d5a0a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_valid_email', 'description': 'Ensure email contains valid email format', 'query': "\n                        SELECT COUNT(*) FROM employees \n                        WHERE email IS NOT NULL \n                        AND email NOT LIKE '%@%.%'\n                    ", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:17.041495+00:00'}, {'id': '7c88158a-f73a-4d2d-8415-36780b52adfd', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_outliers', 'description': 'Check for extreme outliers in id (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(id) as avg_val,\n                            STDDEV(id) as stddev_val\n                        FROM employees\n                        WHERE id IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE id > stats.avg_val + 3 * stats.stddev_val\n                    OR id < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.14637+00:00'}, {'id': 'a7fb7d39-9363-4a6f-a408-44d4860907ef', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_outliers', 'description': 'Check for extreme outliers in salary (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(salary) as avg_val,\n                            STDDEV(salary) as stddev_val\n                        FROM employees\n                        WHERE salary IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE salary > stats.avg_val + 3 * stats.stddev_val\n                    OR salary < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.237429+00:00'}, {'id': '2e0774c0-d639-4261-93b2-cf4cf431375d', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_name_null_rate', 'description': 'Ensure name null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE name IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.347274+00:00'}, {'id': '629c51cc-a297-480a-8264-72cd811f2ce1', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_null_rate', 'description': 'Ensure email null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE email IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.454031+00:00'}, {'id': '97770b45-40ce-45ac-b98e-0b725f9db65a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'distinct_salary', 'description': 'number of distinct salaries', 'query': 'select count(distinct salary) from employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-04T03:45:01.277238+00:00'}]
2025-03-04 13:13:34,859 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:13:34] "GET /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:13:34,875 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:13:34,875 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:13:36,543 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:13:36,543 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:13:38,042 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:13:38,327 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:13:38,327 - root - INFO - app.py:264 - Getting validation rules for organization: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees
2025-03-04 13:13:38,327 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 13:13:38,433 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 13:13:38,434 - root - INFO - app.py:266 - Retrieved 13 validation rules
2025-03-04 13:13:38,435 - root - DEBUG - app.py:267 - Rules content: [{'id': 'd62ba05c-31f7-49f9-8fb1-86cc59ff2d10', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_not_empty', 'description': 'Ensure employees table has at least one row', 'query': 'SELECT COUNT(*) FROM employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-03T17:52:54.83168+00:00'}, {'id': 'fd9b0fdb-4fe1-4064-931c-9e04e49f803f', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_row_growth', 'description': 'Detect unusual growth in employees row count (>20% change)', 'query': '\n            WITH current_count AS (\n                SELECT COUNT(*) as count FROM employees\n            ),\n            prev_count AS (\n                -- Replace with your historical count logic or reference table\n                SELECT \n                    CASE \n                        WHEN COUNT(*) = 0 THEN NULL \n                        ELSE COUNT(*) \n                    END as count \n                FROM employees\n            )\n            SELECT \n                CASE\n                    WHEN prev_count.count IS NULL THEN 0\n                    WHEN ABS(current_count.count - prev_count.count) > prev_count.count * 0.2 THEN 1\n                    ELSE 0\n                END\n            FROM current_count, prev_count\n        ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.457964+00:00'}, {'id': 'd7dfcb26-80c0-4aa8-9da5-c93f5e5ec589', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_unique', 'description': 'Check that id values are unique', 'query': '\n                    SELECT COUNT(*) FROM (\n                        SELECT id, COUNT(*) as count \n                        FROM employees \n                        WHERE id IS NOT NULL\n                        GROUP BY id \n                        HAVING COUNT(*) > 1\n                    ) AS duplicates\n                ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.550078+00:00'}, {'id': 'b37396e1-4806-4cc2-bbb8-66789b383f7b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_positive', 'description': 'Ensure id has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE id < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.676877+00:00'}, {'id': '90d3a101-d07a-4818-b73d-e880b889eb4b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_positive', 'description': 'Ensure salary has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.779642+00:00'}, {'id': 'f1fa2612-f11c-44dc-a0d2-92e99cb527d9', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_not_zero', 'description': 'Ensure salary has no zero values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary = 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.863703+00:00'}, {'id': '043839d3-6f15-4eec-9eb5-594168ed1592', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_hire_date_reasonable_past', 'description': 'Ensure hire_date contains no unreasonably old dates', 'query': "SELECT COUNT(*) FROM employees WHERE hire_date < '1970-01-01'", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.952874+00:00'}, {'id': '118a5eef-52b2-4fb4-8e01-20ec1d1d5a0a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_valid_email', 'description': 'Ensure email contains valid email format', 'query': "\n                        SELECT COUNT(*) FROM employees \n                        WHERE email IS NOT NULL \n                        AND email NOT LIKE '%@%.%'\n                    ", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:17.041495+00:00'}, {'id': '7c88158a-f73a-4d2d-8415-36780b52adfd', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_outliers', 'description': 'Check for extreme outliers in id (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(id) as avg_val,\n                            STDDEV(id) as stddev_val\n                        FROM employees\n                        WHERE id IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE id > stats.avg_val + 3 * stats.stddev_val\n                    OR id < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.14637+00:00'}, {'id': 'a7fb7d39-9363-4a6f-a408-44d4860907ef', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_outliers', 'description': 'Check for extreme outliers in salary (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(salary) as avg_val,\n                            STDDEV(salary) as stddev_val\n                        FROM employees\n                        WHERE salary IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE salary > stats.avg_val + 3 * stats.stddev_val\n                    OR salary < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.237429+00:00'}, {'id': '2e0774c0-d639-4261-93b2-cf4cf431375d', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_name_null_rate', 'description': 'Ensure name null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE name IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.347274+00:00'}, {'id': '629c51cc-a297-480a-8264-72cd811f2ce1', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_null_rate', 'description': 'Ensure email null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE email IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.454031+00:00'}, {'id': '97770b45-40ce-45ac-b98e-0b725f9db65a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'distinct_salary', 'description': 'number of distinct salaries', 'query': 'select count(distinct salary) from employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-04T03:45:01.277238+00:00'}]
2025-03-04 13:13:38,441 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:13:38] "GET /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:14:40,809 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:14:40] "OPTIONS /api/run-validations HTTP/1.1" 200 -
2025-03-04 13:14:41,059 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:14:41,059 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:14:42,976 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:14:42,976 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:14:44,512 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:14:44,775 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:14:44,775 - root - INFO - app.py:280 - Run validations request: {'connection_string': 'duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi-cloud/backend/my_database.duckdb', 'table': 'employees'}
2025-03-04 13:14:44,775 - root - INFO - app.py:290 - Running validations for org: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees, connection: duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi-cloud/backend/my_database.duckdb
2025-03-04 13:14:44,775 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 13:14:45,001 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 13:14:45,001 - root - INFO - app.py:295 - Found 13 rules to execute
2025-03-04 13:14:45,001 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:14:45,008 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:14:46,743 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:14:46,743 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:14:48,385 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:14:48,658 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:14:48,658 - root - ERROR - app.py:329 - Error running validations: run_validations() takes 2 positional arguments but 4 were given
2025-03-04 13:14:48,675 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:14:48] "[35m[1mPOST /api/run-validations HTTP/1.1[0m" 500 -
2025-03-04 13:17:34,643 - werkzeug - INFO - _internal.py:224 -  * Detected change in 'C:\\Users\\mhard\\PycharmProjects\\sparvidata\\sparvi-cloud\\backend\\app.py', reloading
2025-03-04 13:17:34,955 - werkzeug - INFO - _internal.py:224 -  * Restarting with stat
2025-03-04 13:17:38,764 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:17:38,764 - supabase_validation_manager - INFO - supabase_validation_manager.py:49 - Supabase Validation Manager initialized
2025-03-04 13:17:38,784 - werkzeug - WARNING - _internal.py:224 -  * Debugger is active!
2025-03-04 13:17:38,793 - werkzeug - INFO - _internal.py:224 -  * Debugger PIN: 121-941-094
2025-03-04 13:18:05,127 - werkzeug - INFO - _internal.py:224 -  * Detected change in 'C:\\Users\\mhard\\PycharmProjects\\sparvidata\\sparvi-cloud\\backend\\app.py', reloading
2025-03-04 13:18:05,330 - werkzeug - INFO - _internal.py:224 -  * Restarting with stat
2025-03-04 13:18:08,504 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:18:08,504 - supabase_validation_manager - INFO - supabase_validation_manager.py:49 - Supabase Validation Manager initialized
2025-03-04 13:18:08,519 - werkzeug - WARNING - _internal.py:224 -  * Debugger is active!
2025-03-04 13:18:08,527 - werkzeug - INFO - _internal.py:224 -  * Debugger PIN: 121-941-094
2025-03-04 13:18:56,706 - werkzeug - INFO - _internal.py:224 -  * Detected change in 'C:\\Users\\mhard\\PycharmProjects\\sparvidata\\sparvi-cloud\\backend\\app.py', reloading
2025-03-04 13:18:56,935 - werkzeug - INFO - _internal.py:224 -  * Restarting with stat
2025-03-04 13:19:02,097 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:19:02,099 - supabase_validation_manager - INFO - supabase_validation_manager.py:49 - Supabase Validation Manager initialized
2025-03-04 13:19:02,143 - werkzeug - WARNING - _internal.py:224 -  * Debugger is active!
2025-03-04 13:19:02,154 - werkzeug - INFO - _internal.py:224 -  * Debugger PIN: 121-941-094
2025-03-04 13:19:02,890 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:19:02] "[33mOPTIONS /api/profile-history?table=employees&limit=15 HTTP/1.1[0m" 404 -
2025-03-04 13:19:02,893 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:19:02] "[33mOPTIONS /api/profile-history?table=employees&limit=15 HTTP/1.1[0m" 404 -
2025-03-04 13:19:31,024 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:19:31] "OPTIONS /api/profile?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparvi-cloud%2Fbackend%2Fmy_database.duckdb&table=employees HTTP/1.1" 200 -
2025-03-04 13:19:31,344 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:19:31,344 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:19:33,343 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:19:33,344 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:19:34,940 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:19:35,170 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:19:35,173 - root - INFO - app.py:218 - ========== PROFILING STARTED ==========
2025-03-04 13:19:35,174 - root - INFO - app.py:219 - Profiling table employees with connection duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi-cloud/backend/my_database.duckdb
2025-03-04 13:19:35,177 - root - INFO - app.py:220 - User ID: 0a2b31f7-ac94-483c-8721-a88f5db9d296, Organization ID: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b
2025-03-04 13:19:36,710 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:19:36,710 - supabase_profile_history - INFO - supabase_profile_history.py:49 - Supabase Profile History Manager initialized
2025-03-04 13:19:36,711 - root - INFO - app.py:224 - Created SupabaseProfileHistoryManager
2025-03-04 13:19:38,545 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiling_history?select=data&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees&order=collected_at.desc&limit=1 "HTTP/1.1 200 OK"
2025-03-04 13:19:38,548 - root - INFO - app.py:228 - Previous profile found: True
2025-03-04 13:19:38,811 - root - INFO - app.py:233 - Profile completed with 15 keys
2025-03-04 13:19:38,812 - root - INFO - app.py:236 - About to save profile to Supabase
2025-03-04 13:19:38,812 - supabase_profile_history - INFO - supabase_profile_history.py:57 - Attempting to save profile for table employees to Supabase
2025-03-04 13:19:40,500 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiling_history "HTTP/1.1 201 Created"
2025-03-04 13:19:40,502 - supabase_profile_history - INFO - supabase_profile_history.py:95 - Successfully saved profile with ID 2707c30f-3d2b-46c8-96d9-15392a5ea6c6
2025-03-04 13:19:40,503 - root - INFO - app.py:238 - Profile save result: 2707c30f-3d2b-46c8-96d9-15392a5ea6c6
2025-03-04 13:19:42,349 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiling_history?select=collected_at%2C+data&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees&order=collected_at.desc&limit=10 "HTTP/1.1 200 OK"
2025-03-04 13:19:42,353 - supabase_profile_history - INFO - supabase_profile_history.py:248 - Retrieved trend data with 10 data points for 6 columns
2025-03-04 13:19:42,356 - root - INFO - app.py:244 - Added trends data with 10 points
2025-03-04 13:19:42,368 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:19:42] "GET /api/profile?connection_string=duckdb:%2F%2F%2FC:%2FUsers%2Fmhard%2FPycharmProjects%2Fsparvidata%2Fsparvi-cloud%2Fbackend%2Fmy_database.duckdb&table=employees HTTP/1.1" 200 -
2025-03-04 13:19:42,378 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:19:42] "[33mOPTIONS /api/profile-history?table=employees&limit=15 HTTP/1.1[0m" 404 -
2025-03-04 13:19:42,795 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:19:42] "OPTIONS /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:19:42,796 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:19:42] "OPTIONS /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:19:43,057 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:19:43,058 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:19:45,023 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:19:45,024 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:19:46,456 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:19:46,655 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:19:46,655 - root - INFO - app.py:264 - Getting validation rules for organization: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees
2025-03-04 13:19:46,656 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 13:19:46,843 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 13:19:46,845 - root - INFO - app.py:266 - Retrieved 13 validation rules
2025-03-04 13:19:46,845 - root - DEBUG - app.py:267 - Rules content: [{'id': 'd62ba05c-31f7-49f9-8fb1-86cc59ff2d10', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_not_empty', 'description': 'Ensure employees table has at least one row', 'query': 'SELECT COUNT(*) FROM employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-03T17:52:54.83168+00:00'}, {'id': 'fd9b0fdb-4fe1-4064-931c-9e04e49f803f', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_row_growth', 'description': 'Detect unusual growth in employees row count (>20% change)', 'query': '\n            WITH current_count AS (\n                SELECT COUNT(*) as count FROM employees\n            ),\n            prev_count AS (\n                -- Replace with your historical count logic or reference table\n                SELECT \n                    CASE \n                        WHEN COUNT(*) = 0 THEN NULL \n                        ELSE COUNT(*) \n                    END as count \n                FROM employees\n            )\n            SELECT \n                CASE\n                    WHEN prev_count.count IS NULL THEN 0\n                    WHEN ABS(current_count.count - prev_count.count) > prev_count.count * 0.2 THEN 1\n                    ELSE 0\n                END\n            FROM current_count, prev_count\n        ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.457964+00:00'}, {'id': 'd7dfcb26-80c0-4aa8-9da5-c93f5e5ec589', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_unique', 'description': 'Check that id values are unique', 'query': '\n                    SELECT COUNT(*) FROM (\n                        SELECT id, COUNT(*) as count \n                        FROM employees \n                        WHERE id IS NOT NULL\n                        GROUP BY id \n                        HAVING COUNT(*) > 1\n                    ) AS duplicates\n                ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.550078+00:00'}, {'id': 'b37396e1-4806-4cc2-bbb8-66789b383f7b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_positive', 'description': 'Ensure id has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE id < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.676877+00:00'}, {'id': '90d3a101-d07a-4818-b73d-e880b889eb4b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_positive', 'description': 'Ensure salary has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.779642+00:00'}, {'id': 'f1fa2612-f11c-44dc-a0d2-92e99cb527d9', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_not_zero', 'description': 'Ensure salary has no zero values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary = 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.863703+00:00'}, {'id': '043839d3-6f15-4eec-9eb5-594168ed1592', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_hire_date_reasonable_past', 'description': 'Ensure hire_date contains no unreasonably old dates', 'query': "SELECT COUNT(*) FROM employees WHERE hire_date < '1970-01-01'", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.952874+00:00'}, {'id': '118a5eef-52b2-4fb4-8e01-20ec1d1d5a0a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_valid_email', 'description': 'Ensure email contains valid email format', 'query': "\n                        SELECT COUNT(*) FROM employees \n                        WHERE email IS NOT NULL \n                        AND email NOT LIKE '%@%.%'\n                    ", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:17.041495+00:00'}, {'id': '7c88158a-f73a-4d2d-8415-36780b52adfd', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_outliers', 'description': 'Check for extreme outliers in id (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(id) as avg_val,\n                            STDDEV(id) as stddev_val\n                        FROM employees\n                        WHERE id IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE id > stats.avg_val + 3 * stats.stddev_val\n                    OR id < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.14637+00:00'}, {'id': 'a7fb7d39-9363-4a6f-a408-44d4860907ef', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_outliers', 'description': 'Check for extreme outliers in salary (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(salary) as avg_val,\n                            STDDEV(salary) as stddev_val\n                        FROM employees\n                        WHERE salary IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE salary > stats.avg_val + 3 * stats.stddev_val\n                    OR salary < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.237429+00:00'}, {'id': '2e0774c0-d639-4261-93b2-cf4cf431375d', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_name_null_rate', 'description': 'Ensure name null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE name IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.347274+00:00'}, {'id': '629c51cc-a297-480a-8264-72cd811f2ce1', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_null_rate', 'description': 'Ensure email null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE email IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.454031+00:00'}, {'id': '97770b45-40ce-45ac-b98e-0b725f9db65a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'distinct_salary', 'description': 'number of distinct salaries', 'query': 'select count(distinct salary) from employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-04T03:45:01.277238+00:00'}]
2025-03-04 13:19:46,851 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:19:46] "GET /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:19:46,855 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:19:46,855 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:19:48,600 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:19:48,601 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:19:50,184 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:19:50,414 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:19:50,415 - root - INFO - app.py:264 - Getting validation rules for organization: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees
2025-03-04 13:19:50,416 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 13:19:50,513 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 13:19:50,515 - root - INFO - app.py:266 - Retrieved 13 validation rules
2025-03-04 13:19:50,515 - root - DEBUG - app.py:267 - Rules content: [{'id': 'd62ba05c-31f7-49f9-8fb1-86cc59ff2d10', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_not_empty', 'description': 'Ensure employees table has at least one row', 'query': 'SELECT COUNT(*) FROM employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-03T17:52:54.83168+00:00'}, {'id': 'fd9b0fdb-4fe1-4064-931c-9e04e49f803f', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_row_growth', 'description': 'Detect unusual growth in employees row count (>20% change)', 'query': '\n            WITH current_count AS (\n                SELECT COUNT(*) as count FROM employees\n            ),\n            prev_count AS (\n                -- Replace with your historical count logic or reference table\n                SELECT \n                    CASE \n                        WHEN COUNT(*) = 0 THEN NULL \n                        ELSE COUNT(*) \n                    END as count \n                FROM employees\n            )\n            SELECT \n                CASE\n                    WHEN prev_count.count IS NULL THEN 0\n                    WHEN ABS(current_count.count - prev_count.count) > prev_count.count * 0.2 THEN 1\n                    ELSE 0\n                END\n            FROM current_count, prev_count\n        ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.457964+00:00'}, {'id': 'd7dfcb26-80c0-4aa8-9da5-c93f5e5ec589', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_unique', 'description': 'Check that id values are unique', 'query': '\n                    SELECT COUNT(*) FROM (\n                        SELECT id, COUNT(*) as count \n                        FROM employees \n                        WHERE id IS NOT NULL\n                        GROUP BY id \n                        HAVING COUNT(*) > 1\n                    ) AS duplicates\n                ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.550078+00:00'}, {'id': 'b37396e1-4806-4cc2-bbb8-66789b383f7b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_positive', 'description': 'Ensure id has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE id < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.676877+00:00'}, {'id': '90d3a101-d07a-4818-b73d-e880b889eb4b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_positive', 'description': 'Ensure salary has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.779642+00:00'}, {'id': 'f1fa2612-f11c-44dc-a0d2-92e99cb527d9', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_not_zero', 'description': 'Ensure salary has no zero values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary = 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.863703+00:00'}, {'id': '043839d3-6f15-4eec-9eb5-594168ed1592', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_hire_date_reasonable_past', 'description': 'Ensure hire_date contains no unreasonably old dates', 'query': "SELECT COUNT(*) FROM employees WHERE hire_date < '1970-01-01'", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.952874+00:00'}, {'id': '118a5eef-52b2-4fb4-8e01-20ec1d1d5a0a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_valid_email', 'description': 'Ensure email contains valid email format', 'query': "\n                        SELECT COUNT(*) FROM employees \n                        WHERE email IS NOT NULL \n                        AND email NOT LIKE '%@%.%'\n                    ", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:17.041495+00:00'}, {'id': '7c88158a-f73a-4d2d-8415-36780b52adfd', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_outliers', 'description': 'Check for extreme outliers in id (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(id) as avg_val,\n                            STDDEV(id) as stddev_val\n                        FROM employees\n                        WHERE id IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE id > stats.avg_val + 3 * stats.stddev_val\n                    OR id < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.14637+00:00'}, {'id': 'a7fb7d39-9363-4a6f-a408-44d4860907ef', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_outliers', 'description': 'Check for extreme outliers in salary (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(salary) as avg_val,\n                            STDDEV(salary) as stddev_val\n                        FROM employees\n                        WHERE salary IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE salary > stats.avg_val + 3 * stats.stddev_val\n                    OR salary < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.237429+00:00'}, {'id': '2e0774c0-d639-4261-93b2-cf4cf431375d', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_name_null_rate', 'description': 'Ensure name null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE name IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.347274+00:00'}, {'id': '629c51cc-a297-480a-8264-72cd811f2ce1', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_null_rate', 'description': 'Ensure email null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE email IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.454031+00:00'}, {'id': '97770b45-40ce-45ac-b98e-0b725f9db65a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'distinct_salary', 'description': 'number of distinct salaries', 'query': 'select count(distinct salary) from employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-04T03:45:01.277238+00:00'}]
2025-03-04 13:19:50,521 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:19:50] "GET /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:21:39,542 - werkzeug - INFO - _internal.py:224 -  * Detected change in 'C:\\Users\\mhard\\PycharmProjects\\sparvidata\\sparvi-cloud\\backend\\app.py', reloading
2025-03-04 13:21:39,914 - werkzeug - INFO - _internal.py:224 -  * Restarting with stat
2025-03-04 13:21:43,582 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:21:43,584 - supabase_validation_manager - INFO - supabase_validation_manager.py:49 - Supabase Validation Manager initialized
2025-03-04 13:21:43,608 - werkzeug - WARNING - _internal.py:224 -  * Debugger is active!
2025-03-04 13:21:43,617 - werkzeug - INFO - _internal.py:224 -  * Debugger PIN: 121-941-094
2025-03-04 13:21:46,490 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:21:46] "OPTIONS /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 13:21:46,491 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:21:46] "OPTIONS /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 13:21:46,752 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:21:46,753 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:21:48,625 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:21:48,626 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:21:50,054 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:21:50,255 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:21:50,256 - root - INFO - app.py:438 - Getting profile history for table employees, limit 15
2025-03-04 13:21:51,701 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:21:51,701 - supabase_profile_history - INFO - supabase_profile_history.py:49 - Supabase Profile History Manager initialized
2025-03-04 13:21:51,702 - root - ERROR - app.py:448 - Error getting profile history: 'SupabaseProfileHistoryManager' object has no attribute 'get_profile_history'
2025-03-04 13:21:51,703 - root - ERROR - app.py:449 - Traceback (most recent call last):
  File "C:\Users\mhard\PycharmProjects\sparvidata\sparvi-cloud\backend\app.py", line 444, in get_profile_history
    history = profile_history.get_profile_history(organization_id, table_name, limit)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'SupabaseProfileHistoryManager' object has no attribute 'get_profile_history'

2025-03-04 13:21:51,708 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:21:51] "[35m[1mGET /api/profile-history?table=employees&limit=15 HTTP/1.1[0m" 500 -
2025-03-04 13:21:51,712 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:21:51,712 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:21:53,407 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:21:53,408 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:21:54,823 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:21:55,059 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:21:55,060 - root - INFO - app.py:438 - Getting profile history for table employees, limit 15
2025-03-04 13:21:56,546 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:21:56,547 - supabase_profile_history - INFO - supabase_profile_history.py:49 - Supabase Profile History Manager initialized
2025-03-04 13:21:56,547 - root - ERROR - app.py:448 - Error getting profile history: 'SupabaseProfileHistoryManager' object has no attribute 'get_profile_history'
2025-03-04 13:21:56,547 - root - ERROR - app.py:449 - Traceback (most recent call last):
  File "C:\Users\mhard\PycharmProjects\sparvidata\sparvi-cloud\backend\app.py", line 444, in get_profile_history
    history = profile_history.get_profile_history(organization_id, table_name, limit)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'SupabaseProfileHistoryManager' object has no attribute 'get_profile_history'

2025-03-04 13:21:56,555 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:21:56] "[35m[1mGET /api/profile-history?table=employees&limit=15 HTTP/1.1[0m" 500 -
2025-03-04 13:25:23,069 - werkzeug - INFO - _internal.py:224 -  * Detected change in 'C:\\Users\\mhard\\PycharmProjects\\sparvidata\\sparvi-cloud\\backend\\core\\history\\supabase_profile_history.py', reloading
2025-03-04 13:25:23,576 - werkzeug - INFO - _internal.py:224 -  * Restarting with stat
2025-03-04 13:25:27,614 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:25:27,615 - supabase_validation_manager - INFO - supabase_validation_manager.py:49 - Supabase Validation Manager initialized
2025-03-04 13:25:27,633 - werkzeug - WARNING - _internal.py:224 -  * Debugger is active!
2025-03-04 13:25:27,649 - werkzeug - INFO - _internal.py:224 -  * Debugger PIN: 121-941-094
2025-03-04 13:25:33,170 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:25:33] "OPTIONS /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 13:25:33,172 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:25:33] "OPTIONS /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 13:25:33,434 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:25:33,434 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:25:35,774 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:25:35,779 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:25:37,595 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:25:37,791 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:25:37,792 - root - INFO - app.py:438 - Getting profile history for table employees, limit 15
2025-03-04 13:25:39,449 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:25:39,449 - supabase_profile_history - INFO - supabase_profile_history.py:49 - Supabase Profile History Manager initialized
2025-03-04 13:25:41,452 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiling_history?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees&order=collected_at.desc&limit=15 "HTTP/1.1 200 OK"
2025-03-04 13:25:41,559 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:25:41] "GET /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 13:25:41,562 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:25:41,564 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:25:41,948 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:25:41] "OPTIONS /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:25:41,961 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:25:41] "OPTIONS /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:25:42,339 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:25:42,340 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:25:44,328 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:25:44,331 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:25:45,056 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:25:45,059 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:25:47,416 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:25:47,698 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:25:47,700 - root - INFO - app.py:438 - Getting profile history for table employees, limit 15
2025-03-04 13:25:48,173 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:25:48,350 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:25:48,351 - root - INFO - app.py:264 - Getting validation rules for organization: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees
2025-03-04 13:25:48,351 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 13:25:48,540 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 13:25:48,541 - root - INFO - app.py:266 - Retrieved 13 validation rules
2025-03-04 13:25:48,542 - root - DEBUG - app.py:267 - Rules content: [{'id': 'd62ba05c-31f7-49f9-8fb1-86cc59ff2d10', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_not_empty', 'description': 'Ensure employees table has at least one row', 'query': 'SELECT COUNT(*) FROM employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-03T17:52:54.83168+00:00'}, {'id': 'fd9b0fdb-4fe1-4064-931c-9e04e49f803f', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_row_growth', 'description': 'Detect unusual growth in employees row count (>20% change)', 'query': '\n            WITH current_count AS (\n                SELECT COUNT(*) as count FROM employees\n            ),\n            prev_count AS (\n                -- Replace with your historical count logic or reference table\n                SELECT \n                    CASE \n                        WHEN COUNT(*) = 0 THEN NULL \n                        ELSE COUNT(*) \n                    END as count \n                FROM employees\n            )\n            SELECT \n                CASE\n                    WHEN prev_count.count IS NULL THEN 0\n                    WHEN ABS(current_count.count - prev_count.count) > prev_count.count * 0.2 THEN 1\n                    ELSE 0\n                END\n            FROM current_count, prev_count\n        ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.457964+00:00'}, {'id': 'd7dfcb26-80c0-4aa8-9da5-c93f5e5ec589', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_unique', 'description': 'Check that id values are unique', 'query': '\n                    SELECT COUNT(*) FROM (\n                        SELECT id, COUNT(*) as count \n                        FROM employees \n                        WHERE id IS NOT NULL\n                        GROUP BY id \n                        HAVING COUNT(*) > 1\n                    ) AS duplicates\n                ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.550078+00:00'}, {'id': 'b37396e1-4806-4cc2-bbb8-66789b383f7b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_positive', 'description': 'Ensure id has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE id < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.676877+00:00'}, {'id': '90d3a101-d07a-4818-b73d-e880b889eb4b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_positive', 'description': 'Ensure salary has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.779642+00:00'}, {'id': 'f1fa2612-f11c-44dc-a0d2-92e99cb527d9', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_not_zero', 'description': 'Ensure salary has no zero values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary = 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.863703+00:00'}, {'id': '043839d3-6f15-4eec-9eb5-594168ed1592', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_hire_date_reasonable_past', 'description': 'Ensure hire_date contains no unreasonably old dates', 'query': "SELECT COUNT(*) FROM employees WHERE hire_date < '1970-01-01'", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.952874+00:00'}, {'id': '118a5eef-52b2-4fb4-8e01-20ec1d1d5a0a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_valid_email', 'description': 'Ensure email contains valid email format', 'query': "\n                        SELECT COUNT(*) FROM employees \n                        WHERE email IS NOT NULL \n                        AND email NOT LIKE '%@%.%'\n                    ", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:17.041495+00:00'}, {'id': '7c88158a-f73a-4d2d-8415-36780b52adfd', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_outliers', 'description': 'Check for extreme outliers in id (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(id) as avg_val,\n                            STDDEV(id) as stddev_val\n                        FROM employees\n                        WHERE id IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE id > stats.avg_val + 3 * stats.stddev_val\n                    OR id < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.14637+00:00'}, {'id': 'a7fb7d39-9363-4a6f-a408-44d4860907ef', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_outliers', 'description': 'Check for extreme outliers in salary (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(salary) as avg_val,\n                            STDDEV(salary) as stddev_val\n                        FROM employees\n                        WHERE salary IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE salary > stats.avg_val + 3 * stats.stddev_val\n                    OR salary < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.237429+00:00'}, {'id': '2e0774c0-d639-4261-93b2-cf4cf431375d', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_name_null_rate', 'description': 'Ensure name null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE name IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.347274+00:00'}, {'id': '629c51cc-a297-480a-8264-72cd811f2ce1', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_null_rate', 'description': 'Ensure email null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE email IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.454031+00:00'}, {'id': '97770b45-40ce-45ac-b98e-0b725f9db65a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'distinct_salary', 'description': 'number of distinct salaries', 'query': 'select count(distinct salary) from employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-04T03:45:01.277238+00:00'}]
2025-03-04 13:25:48,552 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:25:48] "GET /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:25:48,883 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:25:48,884 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:25:50,195 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:25:50,195 - supabase_profile_history - INFO - supabase_profile_history.py:49 - Supabase Profile History Manager initialized
2025-03-04 13:25:51,842 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:25:51,843 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:25:53,533 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiling_history?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees&order=collected_at.desc&limit=15 "HTTP/1.1 200 OK"
2025-03-04 13:25:53,595 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:25:53] "GET /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 13:25:54,427 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:25:54,637 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:25:54,638 - root - INFO - app.py:264 - Getting validation rules for organization: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees
2025-03-04 13:25:54,638 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 13:25:54,811 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 13:25:54,812 - root - INFO - app.py:266 - Retrieved 13 validation rules
2025-03-04 13:25:54,812 - root - DEBUG - app.py:267 - Rules content: [{'id': 'd62ba05c-31f7-49f9-8fb1-86cc59ff2d10', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_not_empty', 'description': 'Ensure employees table has at least one row', 'query': 'SELECT COUNT(*) FROM employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-03T17:52:54.83168+00:00'}, {'id': 'fd9b0fdb-4fe1-4064-931c-9e04e49f803f', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_row_growth', 'description': 'Detect unusual growth in employees row count (>20% change)', 'query': '\n            WITH current_count AS (\n                SELECT COUNT(*) as count FROM employees\n            ),\n            prev_count AS (\n                -- Replace with your historical count logic or reference table\n                SELECT \n                    CASE \n                        WHEN COUNT(*) = 0 THEN NULL \n                        ELSE COUNT(*) \n                    END as count \n                FROM employees\n            )\n            SELECT \n                CASE\n                    WHEN prev_count.count IS NULL THEN 0\n                    WHEN ABS(current_count.count - prev_count.count) > prev_count.count * 0.2 THEN 1\n                    ELSE 0\n                END\n            FROM current_count, prev_count\n        ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.457964+00:00'}, {'id': 'd7dfcb26-80c0-4aa8-9da5-c93f5e5ec589', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_unique', 'description': 'Check that id values are unique', 'query': '\n                    SELECT COUNT(*) FROM (\n                        SELECT id, COUNT(*) as count \n                        FROM employees \n                        WHERE id IS NOT NULL\n                        GROUP BY id \n                        HAVING COUNT(*) > 1\n                    ) AS duplicates\n                ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.550078+00:00'}, {'id': 'b37396e1-4806-4cc2-bbb8-66789b383f7b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_positive', 'description': 'Ensure id has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE id < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.676877+00:00'}, {'id': '90d3a101-d07a-4818-b73d-e880b889eb4b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_positive', 'description': 'Ensure salary has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.779642+00:00'}, {'id': 'f1fa2612-f11c-44dc-a0d2-92e99cb527d9', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_not_zero', 'description': 'Ensure salary has no zero values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary = 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.863703+00:00'}, {'id': '043839d3-6f15-4eec-9eb5-594168ed1592', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_hire_date_reasonable_past', 'description': 'Ensure hire_date contains no unreasonably old dates', 'query': "SELECT COUNT(*) FROM employees WHERE hire_date < '1970-01-01'", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.952874+00:00'}, {'id': '118a5eef-52b2-4fb4-8e01-20ec1d1d5a0a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_valid_email', 'description': 'Ensure email contains valid email format', 'query': "\n                        SELECT COUNT(*) FROM employees \n                        WHERE email IS NOT NULL \n                        AND email NOT LIKE '%@%.%'\n                    ", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:17.041495+00:00'}, {'id': '7c88158a-f73a-4d2d-8415-36780b52adfd', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_outliers', 'description': 'Check for extreme outliers in id (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(id) as avg_val,\n                            STDDEV(id) as stddev_val\n                        FROM employees\n                        WHERE id IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE id > stats.avg_val + 3 * stats.stddev_val\n                    OR id < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.14637+00:00'}, {'id': 'a7fb7d39-9363-4a6f-a408-44d4860907ef', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_outliers', 'description': 'Check for extreme outliers in salary (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(salary) as avg_val,\n                            STDDEV(salary) as stddev_val\n                        FROM employees\n                        WHERE salary IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE salary > stats.avg_val + 3 * stats.stddev_val\n                    OR salary < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.237429+00:00'}, {'id': '2e0774c0-d639-4261-93b2-cf4cf431375d', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_name_null_rate', 'description': 'Ensure name null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE name IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.347274+00:00'}, {'id': '629c51cc-a297-480a-8264-72cd811f2ce1', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_null_rate', 'description': 'Ensure email null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE email IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.454031+00:00'}, {'id': '97770b45-40ce-45ac-b98e-0b725f9db65a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'distinct_salary', 'description': 'number of distinct salaries', 'query': 'select count(distinct salary) from employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-04T03:45:01.277238+00:00'}]
2025-03-04 13:25:54,822 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:25:54] "GET /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:25:58,769 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:25:58] "[33mOPTIONS /api/validations/d7dfcb26-80c0-4aa8-9da5-c93f5e5ec589?table=employees HTTP/1.1[0m" 404 -
2025-03-04 13:26:02,526 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:26:02] "OPTIONS /api/generate-default-validations HTTP/1.1" 200 -
2025-03-04 13:26:02,847 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:26:02,847 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:26:04,869 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:26:04,870 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:26:05,033 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:26:05] "OPTIONS /api/run-validations HTTP/1.1" 200 -
2025-03-04 13:26:05,357 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:26:05,358 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:26:07,557 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:26:07,761 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:26:07,766 - root - INFO - app.py:339 - Received data: {'connection_string': 'duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi-cloud/backend/my_database.duckdb', 'table': 'employees'}
2025-03-04 13:26:07,768 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 13:26:07,974 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 13:26:08,312 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:26:08,313 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:26:08,377 - root - INFO - app.py:380 - Added 0 default validation rules (12 skipped as duplicates)
2025-03-04 13:26:08,388 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:26:08] "POST /api/generate-default-validations HTTP/1.1" 200 -
2025-03-04 13:26:08,706 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:26:08] "OPTIONS /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:26:09,017 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:26:09,018 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:26:11,452 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:26:11,773 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:26:11,775 - root - INFO - app.py:280 - Run validations request: {'connection_string': 'duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi-cloud/backend/my_database.duckdb', 'table': 'employees'}
2025-03-04 13:26:11,780 - root - INFO - app.py:290 - Running validations for org: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees, connection: duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi-cloud/backend/my_database.duckdb
2025-03-04 13:26:11,782 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 13:26:11,937 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 13:26:11,939 - root - INFO - app.py:295 - Found 13 rules to execute
2025-03-04 13:26:11,987 - root - ERROR - app.py:329 - Error running validations: 'SupabaseValidationManager' object has no attribute 'store_validation_result'
2025-03-04 13:26:11,996 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:26:11] "[35m[1mPOST /api/run-validations HTTP/1.1[0m" 500 -
2025-03-04 13:26:12,501 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:26:12,502 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:26:14,917 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:26:15,146 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:26:15,147 - root - INFO - app.py:264 - Getting validation rules for organization: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees
2025-03-04 13:26:15,147 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 13:26:15,356 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 13:26:15,357 - root - INFO - app.py:266 - Retrieved 13 validation rules
2025-03-04 13:26:15,358 - root - DEBUG - app.py:267 - Rules content: [{'id': 'd62ba05c-31f7-49f9-8fb1-86cc59ff2d10', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_not_empty', 'description': 'Ensure employees table has at least one row', 'query': 'SELECT COUNT(*) FROM employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-03T17:52:54.83168+00:00'}, {'id': 'fd9b0fdb-4fe1-4064-931c-9e04e49f803f', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_row_growth', 'description': 'Detect unusual growth in employees row count (>20% change)', 'query': '\n            WITH current_count AS (\n                SELECT COUNT(*) as count FROM employees\n            ),\n            prev_count AS (\n                -- Replace with your historical count logic or reference table\n                SELECT \n                    CASE \n                        WHEN COUNT(*) = 0 THEN NULL \n                        ELSE COUNT(*) \n                    END as count \n                FROM employees\n            )\n            SELECT \n                CASE\n                    WHEN prev_count.count IS NULL THEN 0\n                    WHEN ABS(current_count.count - prev_count.count) > prev_count.count * 0.2 THEN 1\n                    ELSE 0\n                END\n            FROM current_count, prev_count\n        ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.457964+00:00'}, {'id': 'd7dfcb26-80c0-4aa8-9da5-c93f5e5ec589', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_unique', 'description': 'Check that id values are unique', 'query': '\n                    SELECT COUNT(*) FROM (\n                        SELECT id, COUNT(*) as count \n                        FROM employees \n                        WHERE id IS NOT NULL\n                        GROUP BY id \n                        HAVING COUNT(*) > 1\n                    ) AS duplicates\n                ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.550078+00:00'}, {'id': 'b37396e1-4806-4cc2-bbb8-66789b383f7b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_positive', 'description': 'Ensure id has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE id < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.676877+00:00'}, {'id': '90d3a101-d07a-4818-b73d-e880b889eb4b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_positive', 'description': 'Ensure salary has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.779642+00:00'}, {'id': 'f1fa2612-f11c-44dc-a0d2-92e99cb527d9', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_not_zero', 'description': 'Ensure salary has no zero values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary = 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.863703+00:00'}, {'id': '043839d3-6f15-4eec-9eb5-594168ed1592', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_hire_date_reasonable_past', 'description': 'Ensure hire_date contains no unreasonably old dates', 'query': "SELECT COUNT(*) FROM employees WHERE hire_date < '1970-01-01'", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.952874+00:00'}, {'id': '118a5eef-52b2-4fb4-8e01-20ec1d1d5a0a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_valid_email', 'description': 'Ensure email contains valid email format', 'query': "\n                        SELECT COUNT(*) FROM employees \n                        WHERE email IS NOT NULL \n                        AND email NOT LIKE '%@%.%'\n                    ", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:17.041495+00:00'}, {'id': '7c88158a-f73a-4d2d-8415-36780b52adfd', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_outliers', 'description': 'Check for extreme outliers in id (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(id) as avg_val,\n                            STDDEV(id) as stddev_val\n                        FROM employees\n                        WHERE id IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE id > stats.avg_val + 3 * stats.stddev_val\n                    OR id < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.14637+00:00'}, {'id': 'a7fb7d39-9363-4a6f-a408-44d4860907ef', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_outliers', 'description': 'Check for extreme outliers in salary (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(salary) as avg_val,\n                            STDDEV(salary) as stddev_val\n                        FROM employees\n                        WHERE salary IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE salary > stats.avg_val + 3 * stats.stddev_val\n                    OR salary < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.237429+00:00'}, {'id': '2e0774c0-d639-4261-93b2-cf4cf431375d', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_name_null_rate', 'description': 'Ensure name null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE name IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.347274+00:00'}, {'id': '629c51cc-a297-480a-8264-72cd811f2ce1', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_null_rate', 'description': 'Ensure email null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE email IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.454031+00:00'}, {'id': '97770b45-40ce-45ac-b98e-0b725f9db65a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'distinct_salary', 'description': 'number of distinct salaries', 'query': 'select count(distinct salary) from employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-04T03:45:01.277238+00:00'}]
2025-03-04 13:26:15,367 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:26:15] "GET /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:26:31,507 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:26:31] "OPTIONS /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 13:26:31,508 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:26:31] "OPTIONS /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 13:26:31,773 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:26:31,773 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:26:33,488 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:26:33,489 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:26:35,008 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:26:35,190 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:26:35,191 - root - INFO - app.py:438 - Getting profile history for table employees, limit 15
2025-03-04 13:26:36,651 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:26:36,651 - supabase_profile_history - INFO - supabase_profile_history.py:49 - Supabase Profile History Manager initialized
2025-03-04 13:26:38,389 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiling_history?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees&order=collected_at.desc&limit=15 "HTTP/1.1 200 OK"
2025-03-04 13:26:38,497 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:26:38] "GET /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 13:26:38,501 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:26:38,502 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:26:38,852 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:26:38] "OPTIONS /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:26:38,855 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:26:38] "OPTIONS /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:26:39,158 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:26:39,158 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:26:40,580 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:26:40,581 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:26:41,399 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:26:41,400 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:26:42,692 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:26:42,918 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:26:42,919 - root - INFO - app.py:438 - Getting profile history for table employees, limit 15
2025-03-04 13:26:43,558 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:26:43,749 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:26:43,750 - root - INFO - app.py:264 - Getting validation rules for organization: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees
2025-03-04 13:26:43,751 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 13:26:43,947 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 13:26:43,949 - root - INFO - app.py:266 - Retrieved 13 validation rules
2025-03-04 13:26:43,949 - root - DEBUG - app.py:267 - Rules content: [{'id': 'd62ba05c-31f7-49f9-8fb1-86cc59ff2d10', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_not_empty', 'description': 'Ensure employees table has at least one row', 'query': 'SELECT COUNT(*) FROM employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-03T17:52:54.83168+00:00'}, {'id': 'fd9b0fdb-4fe1-4064-931c-9e04e49f803f', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_row_growth', 'description': 'Detect unusual growth in employees row count (>20% change)', 'query': '\n            WITH current_count AS (\n                SELECT COUNT(*) as count FROM employees\n            ),\n            prev_count AS (\n                -- Replace with your historical count logic or reference table\n                SELECT \n                    CASE \n                        WHEN COUNT(*) = 0 THEN NULL \n                        ELSE COUNT(*) \n                    END as count \n                FROM employees\n            )\n            SELECT \n                CASE\n                    WHEN prev_count.count IS NULL THEN 0\n                    WHEN ABS(current_count.count - prev_count.count) > prev_count.count * 0.2 THEN 1\n                    ELSE 0\n                END\n            FROM current_count, prev_count\n        ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.457964+00:00'}, {'id': 'd7dfcb26-80c0-4aa8-9da5-c93f5e5ec589', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_unique', 'description': 'Check that id values are unique', 'query': '\n                    SELECT COUNT(*) FROM (\n                        SELECT id, COUNT(*) as count \n                        FROM employees \n                        WHERE id IS NOT NULL\n                        GROUP BY id \n                        HAVING COUNT(*) > 1\n                    ) AS duplicates\n                ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.550078+00:00'}, {'id': 'b37396e1-4806-4cc2-bbb8-66789b383f7b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_positive', 'description': 'Ensure id has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE id < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.676877+00:00'}, {'id': '90d3a101-d07a-4818-b73d-e880b889eb4b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_positive', 'description': 'Ensure salary has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.779642+00:00'}, {'id': 'f1fa2612-f11c-44dc-a0d2-92e99cb527d9', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_not_zero', 'description': 'Ensure salary has no zero values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary = 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.863703+00:00'}, {'id': '043839d3-6f15-4eec-9eb5-594168ed1592', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_hire_date_reasonable_past', 'description': 'Ensure hire_date contains no unreasonably old dates', 'query': "SELECT COUNT(*) FROM employees WHERE hire_date < '1970-01-01'", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.952874+00:00'}, {'id': '118a5eef-52b2-4fb4-8e01-20ec1d1d5a0a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_valid_email', 'description': 'Ensure email contains valid email format', 'query': "\n                        SELECT COUNT(*) FROM employees \n                        WHERE email IS NOT NULL \n                        AND email NOT LIKE '%@%.%'\n                    ", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:17.041495+00:00'}, {'id': '7c88158a-f73a-4d2d-8415-36780b52adfd', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_outliers', 'description': 'Check for extreme outliers in id (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(id) as avg_val,\n                            STDDEV(id) as stddev_val\n                        FROM employees\n                        WHERE id IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE id > stats.avg_val + 3 * stats.stddev_val\n                    OR id < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.14637+00:00'}, {'id': 'a7fb7d39-9363-4a6f-a408-44d4860907ef', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_outliers', 'description': 'Check for extreme outliers in salary (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(salary) as avg_val,\n                            STDDEV(salary) as stddev_val\n                        FROM employees\n                        WHERE salary IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE salary > stats.avg_val + 3 * stats.stddev_val\n                    OR salary < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.237429+00:00'}, {'id': '2e0774c0-d639-4261-93b2-cf4cf431375d', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_name_null_rate', 'description': 'Ensure name null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE name IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.347274+00:00'}, {'id': '629c51cc-a297-480a-8264-72cd811f2ce1', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_null_rate', 'description': 'Ensure email null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE email IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.454031+00:00'}, {'id': '97770b45-40ce-45ac-b98e-0b725f9db65a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'distinct_salary', 'description': 'number of distinct salaries', 'query': 'select count(distinct salary) from employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-04T03:45:01.277238+00:00'}]
2025-03-04 13:26:43,971 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:26:43] "GET /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:26:44,278 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:26:44,278 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:26:44,932 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:26:44,933 - supabase_profile_history - INFO - supabase_profile_history.py:49 - Supabase Profile History Manager initialized
2025-03-04 13:26:47,098 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:26:47,099 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:26:47,864 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiling_history?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees&order=collected_at.desc&limit=15 "HTTP/1.1 200 OK"
2025-03-04 13:26:47,958 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:26:47] "GET /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 13:26:49,133 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:26:49,325 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:26:49,326 - root - INFO - app.py:264 - Getting validation rules for organization: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees
2025-03-04 13:26:49,326 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 13:26:49,553 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 13:26:49,554 - root - INFO - app.py:266 - Retrieved 13 validation rules
2025-03-04 13:26:49,555 - root - DEBUG - app.py:267 - Rules content: [{'id': 'd62ba05c-31f7-49f9-8fb1-86cc59ff2d10', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_not_empty', 'description': 'Ensure employees table has at least one row', 'query': 'SELECT COUNT(*) FROM employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-03T17:52:54.83168+00:00'}, {'id': 'fd9b0fdb-4fe1-4064-931c-9e04e49f803f', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_row_growth', 'description': 'Detect unusual growth in employees row count (>20% change)', 'query': '\n            WITH current_count AS (\n                SELECT COUNT(*) as count FROM employees\n            ),\n            prev_count AS (\n                -- Replace with your historical count logic or reference table\n                SELECT \n                    CASE \n                        WHEN COUNT(*) = 0 THEN NULL \n                        ELSE COUNT(*) \n                    END as count \n                FROM employees\n            )\n            SELECT \n                CASE\n                    WHEN prev_count.count IS NULL THEN 0\n                    WHEN ABS(current_count.count - prev_count.count) > prev_count.count * 0.2 THEN 1\n                    ELSE 0\n                END\n            FROM current_count, prev_count\n        ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.457964+00:00'}, {'id': 'd7dfcb26-80c0-4aa8-9da5-c93f5e5ec589', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_unique', 'description': 'Check that id values are unique', 'query': '\n                    SELECT COUNT(*) FROM (\n                        SELECT id, COUNT(*) as count \n                        FROM employees \n                        WHERE id IS NOT NULL\n                        GROUP BY id \n                        HAVING COUNT(*) > 1\n                    ) AS duplicates\n                ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.550078+00:00'}, {'id': 'b37396e1-4806-4cc2-bbb8-66789b383f7b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_positive', 'description': 'Ensure id has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE id < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.676877+00:00'}, {'id': '90d3a101-d07a-4818-b73d-e880b889eb4b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_positive', 'description': 'Ensure salary has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.779642+00:00'}, {'id': 'f1fa2612-f11c-44dc-a0d2-92e99cb527d9', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_not_zero', 'description': 'Ensure salary has no zero values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary = 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.863703+00:00'}, {'id': '043839d3-6f15-4eec-9eb5-594168ed1592', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_hire_date_reasonable_past', 'description': 'Ensure hire_date contains no unreasonably old dates', 'query': "SELECT COUNT(*) FROM employees WHERE hire_date < '1970-01-01'", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.952874+00:00'}, {'id': '118a5eef-52b2-4fb4-8e01-20ec1d1d5a0a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_valid_email', 'description': 'Ensure email contains valid email format', 'query': "\n                        SELECT COUNT(*) FROM employees \n                        WHERE email IS NOT NULL \n                        AND email NOT LIKE '%@%.%'\n                    ", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:17.041495+00:00'}, {'id': '7c88158a-f73a-4d2d-8415-36780b52adfd', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_outliers', 'description': 'Check for extreme outliers in id (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(id) as avg_val,\n                            STDDEV(id) as stddev_val\n                        FROM employees\n                        WHERE id IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE id > stats.avg_val + 3 * stats.stddev_val\n                    OR id < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.14637+00:00'}, {'id': 'a7fb7d39-9363-4a6f-a408-44d4860907ef', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_outliers', 'description': 'Check for extreme outliers in salary (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(salary) as avg_val,\n                            STDDEV(salary) as stddev_val\n                        FROM employees\n                        WHERE salary IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE salary > stats.avg_val + 3 * stats.stddev_val\n                    OR salary < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.237429+00:00'}, {'id': '2e0774c0-d639-4261-93b2-cf4cf431375d', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_name_null_rate', 'description': 'Ensure name null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE name IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.347274+00:00'}, {'id': '629c51cc-a297-480a-8264-72cd811f2ce1', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_null_rate', 'description': 'Ensure email null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE email IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.454031+00:00'}, {'id': '97770b45-40ce-45ac-b98e-0b725f9db65a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'distinct_salary', 'description': 'number of distinct salaries', 'query': 'select count(distinct salary) from employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-04T03:45:01.277238+00:00'}]
2025-03-04 13:26:49,565 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:26:49] "GET /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:26:51,630 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:26:51] "OPTIONS /api/run-validations HTTP/1.1" 200 -
2025-03-04 13:26:51,893 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:26:51,893 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:26:53,769 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:26:53,770 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:26:55,327 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:26:55,581 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:26:55,582 - root - INFO - app.py:280 - Run validations request: {'connection_string': 'duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi-cloud/backend/my_database.duckdb', 'table': 'employees'}
2025-03-04 13:26:55,582 - root - INFO - app.py:290 - Running validations for org: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees, connection: duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi-cloud/backend/my_database.duckdb
2025-03-04 13:26:55,582 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 13:26:55,808 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 13:26:55,812 - root - INFO - app.py:295 - Found 13 rules to execute
2025-03-04 13:26:55,833 - root - ERROR - app.py:329 - Error running validations: 'SupabaseValidationManager' object has no attribute 'store_validation_result'
2025-03-04 13:26:55,838 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:26:55] "[35m[1mPOST /api/run-validations HTTP/1.1[0m" 500 -
2025-03-04 13:30:27,505 - werkzeug - INFO - _internal.py:224 -  * Detected change in 'C:\\Users\\mhard\\PycharmProjects\\sparvidata\\sparvi-cloud\\backend\\core\\validations\\supabase_validation_manager.py', reloading
2025-03-04 13:30:27,774 - werkzeug - INFO - _internal.py:224 -  * Restarting with stat
2025-03-04 13:30:31,378 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:30:31,378 - supabase_validation_manager - INFO - supabase_validation_manager.py:49 - Supabase Validation Manager initialized
2025-03-04 13:30:31,394 - werkzeug - WARNING - _internal.py:224 -  * Debugger is active!
2025-03-04 13:30:31,407 - werkzeug - INFO - _internal.py:224 -  * Debugger PIN: 121-941-094
2025-03-04 13:30:34,864 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:30:34] "OPTIONS /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 13:30:34,865 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:30:34] "OPTIONS /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 13:30:35,125 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:30:35,125 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:30:37,001 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:30:37,002 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:30:38,440 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:30:38,670 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:30:38,670 - root - INFO - app.py:438 - Getting profile history for table employees, limit 15
2025-03-04 13:30:40,093 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:30:40,094 - supabase_profile_history - INFO - supabase_profile_history.py:49 - Supabase Profile History Manager initialized
2025-03-04 13:30:41,832 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiling_history?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees&order=collected_at.desc&limit=15 "HTTP/1.1 200 OK"
2025-03-04 13:30:41,897 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:30:41] "GET /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 13:30:41,908 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:30:41,908 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:30:42,296 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:30:42] "OPTIONS /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:30:42,297 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:30:42] "OPTIONS /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:30:42,610 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:30:42,611 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:30:43,867 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:30:43,868 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:30:44,704 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:30:44,705 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:30:45,863 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:30:46,071 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:30:46,073 - root - INFO - app.py:438 - Getting profile history for table employees, limit 15
2025-03-04 13:30:46,679 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:30:46,948 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:30:46,949 - root - INFO - app.py:264 - Getting validation rules for organization: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees
2025-03-04 13:30:46,949 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 13:30:47,169 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 13:30:47,172 - root - INFO - app.py:266 - Retrieved 13 validation rules
2025-03-04 13:30:47,173 - root - DEBUG - app.py:267 - Rules content: [{'id': 'd62ba05c-31f7-49f9-8fb1-86cc59ff2d10', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_not_empty', 'description': 'Ensure employees table has at least one row', 'query': 'SELECT COUNT(*) FROM employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-03T17:52:54.83168+00:00'}, {'id': 'fd9b0fdb-4fe1-4064-931c-9e04e49f803f', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_row_growth', 'description': 'Detect unusual growth in employees row count (>20% change)', 'query': '\n            WITH current_count AS (\n                SELECT COUNT(*) as count FROM employees\n            ),\n            prev_count AS (\n                -- Replace with your historical count logic or reference table\n                SELECT \n                    CASE \n                        WHEN COUNT(*) = 0 THEN NULL \n                        ELSE COUNT(*) \n                    END as count \n                FROM employees\n            )\n            SELECT \n                CASE\n                    WHEN prev_count.count IS NULL THEN 0\n                    WHEN ABS(current_count.count - prev_count.count) > prev_count.count * 0.2 THEN 1\n                    ELSE 0\n                END\n            FROM current_count, prev_count\n        ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.457964+00:00'}, {'id': 'd7dfcb26-80c0-4aa8-9da5-c93f5e5ec589', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_unique', 'description': 'Check that id values are unique', 'query': '\n                    SELECT COUNT(*) FROM (\n                        SELECT id, COUNT(*) as count \n                        FROM employees \n                        WHERE id IS NOT NULL\n                        GROUP BY id \n                        HAVING COUNT(*) > 1\n                    ) AS duplicates\n                ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.550078+00:00'}, {'id': 'b37396e1-4806-4cc2-bbb8-66789b383f7b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_positive', 'description': 'Ensure id has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE id < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.676877+00:00'}, {'id': '90d3a101-d07a-4818-b73d-e880b889eb4b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_positive', 'description': 'Ensure salary has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.779642+00:00'}, {'id': 'f1fa2612-f11c-44dc-a0d2-92e99cb527d9', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_not_zero', 'description': 'Ensure salary has no zero values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary = 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.863703+00:00'}, {'id': '043839d3-6f15-4eec-9eb5-594168ed1592', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_hire_date_reasonable_past', 'description': 'Ensure hire_date contains no unreasonably old dates', 'query': "SELECT COUNT(*) FROM employees WHERE hire_date < '1970-01-01'", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.952874+00:00'}, {'id': '118a5eef-52b2-4fb4-8e01-20ec1d1d5a0a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_valid_email', 'description': 'Ensure email contains valid email format', 'query': "\n                        SELECT COUNT(*) FROM employees \n                        WHERE email IS NOT NULL \n                        AND email NOT LIKE '%@%.%'\n                    ", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:17.041495+00:00'}, {'id': '7c88158a-f73a-4d2d-8415-36780b52adfd', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_outliers', 'description': 'Check for extreme outliers in id (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(id) as avg_val,\n                            STDDEV(id) as stddev_val\n                        FROM employees\n                        WHERE id IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE id > stats.avg_val + 3 * stats.stddev_val\n                    OR id < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.14637+00:00'}, {'id': 'a7fb7d39-9363-4a6f-a408-44d4860907ef', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_outliers', 'description': 'Check for extreme outliers in salary (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(salary) as avg_val,\n                            STDDEV(salary) as stddev_val\n                        FROM employees\n                        WHERE salary IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE salary > stats.avg_val + 3 * stats.stddev_val\n                    OR salary < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.237429+00:00'}, {'id': '2e0774c0-d639-4261-93b2-cf4cf431375d', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_name_null_rate', 'description': 'Ensure name null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE name IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.347274+00:00'}, {'id': '629c51cc-a297-480a-8264-72cd811f2ce1', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_null_rate', 'description': 'Ensure email null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE email IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.454031+00:00'}, {'id': '97770b45-40ce-45ac-b98e-0b725f9db65a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'distinct_salary', 'description': 'number of distinct salaries', 'query': 'select count(distinct salary) from employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-04T03:45:01.277238+00:00'}]
2025-03-04 13:30:47,183 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:30:47] "GET /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:30:47,498 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:30:47,498 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:30:47,933 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:30:47,933 - supabase_profile_history - INFO - supabase_profile_history.py:49 - Supabase Profile History Manager initialized
2025-03-04 13:30:49,603 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:30:49,604 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:30:50,126 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiling_history?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees&order=collected_at.desc&limit=15 "HTTP/1.1 200 OK"
2025-03-04 13:30:50,171 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:30:50] "GET /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 13:30:51,209 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:30:51,400 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:30:51,401 - root - INFO - app.py:264 - Getting validation rules for organization: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees
2025-03-04 13:30:51,401 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 13:30:51,503 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 13:30:51,504 - root - INFO - app.py:266 - Retrieved 13 validation rules
2025-03-04 13:30:51,505 - root - DEBUG - app.py:267 - Rules content: [{'id': 'd62ba05c-31f7-49f9-8fb1-86cc59ff2d10', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_not_empty', 'description': 'Ensure employees table has at least one row', 'query': 'SELECT COUNT(*) FROM employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-03T17:52:54.83168+00:00'}, {'id': 'fd9b0fdb-4fe1-4064-931c-9e04e49f803f', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_row_growth', 'description': 'Detect unusual growth in employees row count (>20% change)', 'query': '\n            WITH current_count AS (\n                SELECT COUNT(*) as count FROM employees\n            ),\n            prev_count AS (\n                -- Replace with your historical count logic or reference table\n                SELECT \n                    CASE \n                        WHEN COUNT(*) = 0 THEN NULL \n                        ELSE COUNT(*) \n                    END as count \n                FROM employees\n            )\n            SELECT \n                CASE\n                    WHEN prev_count.count IS NULL THEN 0\n                    WHEN ABS(current_count.count - prev_count.count) > prev_count.count * 0.2 THEN 1\n                    ELSE 0\n                END\n            FROM current_count, prev_count\n        ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.457964+00:00'}, {'id': 'd7dfcb26-80c0-4aa8-9da5-c93f5e5ec589', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_unique', 'description': 'Check that id values are unique', 'query': '\n                    SELECT COUNT(*) FROM (\n                        SELECT id, COUNT(*) as count \n                        FROM employees \n                        WHERE id IS NOT NULL\n                        GROUP BY id \n                        HAVING COUNT(*) > 1\n                    ) AS duplicates\n                ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.550078+00:00'}, {'id': 'b37396e1-4806-4cc2-bbb8-66789b383f7b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_positive', 'description': 'Ensure id has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE id < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.676877+00:00'}, {'id': '90d3a101-d07a-4818-b73d-e880b889eb4b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_positive', 'description': 'Ensure salary has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.779642+00:00'}, {'id': 'f1fa2612-f11c-44dc-a0d2-92e99cb527d9', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_not_zero', 'description': 'Ensure salary has no zero values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary = 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.863703+00:00'}, {'id': '043839d3-6f15-4eec-9eb5-594168ed1592', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_hire_date_reasonable_past', 'description': 'Ensure hire_date contains no unreasonably old dates', 'query': "SELECT COUNT(*) FROM employees WHERE hire_date < '1970-01-01'", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.952874+00:00'}, {'id': '118a5eef-52b2-4fb4-8e01-20ec1d1d5a0a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_valid_email', 'description': 'Ensure email contains valid email format', 'query': "\n                        SELECT COUNT(*) FROM employees \n                        WHERE email IS NOT NULL \n                        AND email NOT LIKE '%@%.%'\n                    ", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:17.041495+00:00'}, {'id': '7c88158a-f73a-4d2d-8415-36780b52adfd', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_outliers', 'description': 'Check for extreme outliers in id (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(id) as avg_val,\n                            STDDEV(id) as stddev_val\n                        FROM employees\n                        WHERE id IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE id > stats.avg_val + 3 * stats.stddev_val\n                    OR id < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.14637+00:00'}, {'id': 'a7fb7d39-9363-4a6f-a408-44d4860907ef', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_outliers', 'description': 'Check for extreme outliers in salary (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(salary) as avg_val,\n                            STDDEV(salary) as stddev_val\n                        FROM employees\n                        WHERE salary IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE salary > stats.avg_val + 3 * stats.stddev_val\n                    OR salary < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.237429+00:00'}, {'id': '2e0774c0-d639-4261-93b2-cf4cf431375d', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_name_null_rate', 'description': 'Ensure name null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE name IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.347274+00:00'}, {'id': '629c51cc-a297-480a-8264-72cd811f2ce1', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_null_rate', 'description': 'Ensure email null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE email IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.454031+00:00'}, {'id': '97770b45-40ce-45ac-b98e-0b725f9db65a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'distinct_salary', 'description': 'number of distinct salaries', 'query': 'select count(distinct salary) from employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-04T03:45:01.277238+00:00'}]
2025-03-04 13:30:51,511 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:30:51] "GET /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:30:52,002 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:30:52] "OPTIONS /api/run-validations HTTP/1.1" 200 -
2025-03-04 13:30:52,248 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:30:52,249 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:30:54,104 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:30:54,104 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:30:55,650 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:30:55,882 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:30:55,884 - root - INFO - app.py:280 - Run validations request: {'connection_string': 'duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi-cloud/backend/my_database.duckdb', 'table': 'employees'}
2025-03-04 13:30:55,884 - root - INFO - app.py:290 - Running validations for org: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees, connection: duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi-cloud/backend/my_database.duckdb
2025-03-04 13:30:55,885 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 13:30:55,980 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 13:30:55,981 - root - INFO - app.py:295 - Found 13 rules to execute
2025-03-04 13:30:57,883 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 13:30:59,735 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 13:31:01,476 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 13:31:03,334 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 13:31:05,213 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 13:31:07,018 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 13:31:08,742 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 13:31:10,568 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 13:31:12,305 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 13:31:14,055 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 13:31:15,859 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 13:31:17,668 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 13:31:19,406 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 13:31:19,408 - root - INFO - app.py:321 - Validation execution complete, got 13 results
2025-03-04 13:31:19,408 - root - DEBUG - app.py:322 - Validation results: [{'rule_name': 'check_employees_not_empty', 'is_valid': True, 'actual_value': 100, 'expected_value': 0, 'description': 'Ensure employees table has at least one row'}, {'rule_name': 'check_employees_row_growth', 'is_valid': True, 'actual_value': 0, 'expected_value': 0, 'description': 'Detect unusual growth in employees row count (>20% change)'}, {'rule_name': 'check_id_unique', 'is_valid': True, 'actual_value': 0, 'expected_value': 0, 'description': 'Check that id values are unique'}, {'rule_name': 'check_id_positive', 'is_valid': True, 'actual_value': 0, 'expected_value': 0, 'description': 'Ensure id has no negative values'}, {'rule_name': 'check_salary_positive', 'is_valid': True, 'actual_value': 0, 'expected_value': 0, 'description': 'Ensure salary has no negative values'}, {'rule_name': 'check_salary_not_zero', 'is_valid': True, 'actual_value': 0, 'expected_value': 0, 'description': 'Ensure salary has no zero values'}, {'rule_name': 'check_hire_date_reasonable_past', 'is_valid': True, 'actual_value': 0, 'expected_value': 0, 'description': 'Ensure hire_date contains no unreasonably old dates'}, {'rule_name': 'check_email_valid_email', 'is_valid': False, 'actual_value': 1, 'expected_value': 0, 'description': 'Ensure email contains valid email format'}, {'rule_name': 'check_id_outliers', 'is_valid': True, 'actual_value': 0, 'expected_value': 5, 'description': 'Check for extreme outliers in id (> 3 std deviations)'}, {'rule_name': 'check_salary_outliers', 'is_valid': True, 'actual_value': 1, 'expected_value': 5, 'description': 'Check for extreme outliers in salary (> 3 std deviations)'}, {'rule_name': 'check_name_null_rate', 'is_valid': True, 'actual_value': 0.0, 'expected_value': 25.0, 'description': 'Ensure name null rate is below acceptable threshold'}, {'rule_name': 'check_email_null_rate', 'is_valid': True, 'actual_value': 0.0, 'expected_value': 25.0, 'description': 'Ensure email null rate is below acceptable threshold'}, {'rule_name': 'distinct_salary', 'is_valid': True, 'actual_value': 94, 'expected_value': 0, 'description': 'number of distinct salaries'}]
2025-03-04 13:31:19,417 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:31:19] "POST /api/run-validations HTTP/1.1" 200 -
2025-03-04 13:32:03,924 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:32:03] "[33mOPTIONS /api/validations/97770b45-40ce-45ac-b98e-0b725f9db65a?table=employees HTTP/1.1[0m" 404 -
2025-03-04 13:34:18,476 - werkzeug - INFO - _internal.py:224 -  * Detected change in 'C:\\Users\\mhard\\PycharmProjects\\sparvidata\\sparvi-cloud\\backend\\app.py', reloading
2025-03-04 13:34:18,823 - werkzeug - INFO - _internal.py:224 -  * Restarting with stat
2025-03-04 13:34:22,863 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:34:22,864 - supabase_validation_manager - INFO - supabase_validation_manager.py:49 - Supabase Validation Manager initialized
2025-03-04 13:34:22,878 - werkzeug - WARNING - _internal.py:224 -  * Debugger is active!
2025-03-04 13:34:22,885 - werkzeug - INFO - _internal.py:224 -  * Debugger PIN: 121-941-094
2025-03-04 13:34:48,145 - werkzeug - INFO - _internal.py:224 -  * Detected change in 'C:\\Users\\mhard\\PycharmProjects\\sparvidata\\sparvi-cloud\\backend\\core\\validations\\supabase_validation_manager.py', reloading
2025-03-04 13:34:48,319 - werkzeug - INFO - _internal.py:224 -  * Restarting with stat
2025-03-04 13:34:51,847 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:34:51,847 - supabase_validation_manager - INFO - supabase_validation_manager.py:49 - Supabase Validation Manager initialized
2025-03-04 13:34:51,861 - werkzeug - WARNING - _internal.py:224 -  * Debugger is active!
2025-03-04 13:34:51,869 - werkzeug - INFO - _internal.py:224 -  * Debugger PIN: 121-941-094
2025-03-04 13:35:01,862 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:35:01] "OPTIONS /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 13:35:01,863 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:35:01] "OPTIONS /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 13:35:02,126 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:35:02,126 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:35:03,985 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:35:03,986 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:35:05,442 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:35:05,638 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:35:05,638 - root - INFO - app.py:438 - Getting profile history for table employees, limit 15
2025-03-04 13:35:07,086 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:35:07,086 - supabase_profile_history - INFO - supabase_profile_history.py:49 - Supabase Profile History Manager initialized
2025-03-04 13:35:08,856 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiling_history?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees&order=collected_at.desc&limit=15 "HTTP/1.1 200 OK"
2025-03-04 13:35:08,900 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:35:08] "GET /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 13:35:08,904 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:35:08,905 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:35:09,286 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:35:09] "OPTIONS /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:35:09,288 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:35:09] "OPTIONS /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:35:09,595 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:35:09,595 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:35:11,034 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:35:11,035 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:35:11,858 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:35:11,859 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:35:12,995 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:35:13,190 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:35:13,192 - root - INFO - app.py:438 - Getting profile history for table employees, limit 15
2025-03-04 13:35:13,908 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:35:14,197 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:35:14,199 - root - INFO - app.py:264 - Getting validation rules for organization: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees
2025-03-04 13:35:14,199 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 13:35:14,403 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 13:35:14,405 - root - INFO - app.py:266 - Retrieved 13 validation rules
2025-03-04 13:35:14,406 - root - DEBUG - app.py:267 - Rules content: [{'id': 'd62ba05c-31f7-49f9-8fb1-86cc59ff2d10', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_not_empty', 'description': 'Ensure employees table has at least one row', 'query': 'SELECT COUNT(*) FROM employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-03T17:52:54.83168+00:00'}, {'id': 'fd9b0fdb-4fe1-4064-931c-9e04e49f803f', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_row_growth', 'description': 'Detect unusual growth in employees row count (>20% change)', 'query': '\n            WITH current_count AS (\n                SELECT COUNT(*) as count FROM employees\n            ),\n            prev_count AS (\n                -- Replace with your historical count logic or reference table\n                SELECT \n                    CASE \n                        WHEN COUNT(*) = 0 THEN NULL \n                        ELSE COUNT(*) \n                    END as count \n                FROM employees\n            )\n            SELECT \n                CASE\n                    WHEN prev_count.count IS NULL THEN 0\n                    WHEN ABS(current_count.count - prev_count.count) > prev_count.count * 0.2 THEN 1\n                    ELSE 0\n                END\n            FROM current_count, prev_count\n        ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.457964+00:00'}, {'id': 'd7dfcb26-80c0-4aa8-9da5-c93f5e5ec589', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_unique', 'description': 'Check that id values are unique', 'query': '\n                    SELECT COUNT(*) FROM (\n                        SELECT id, COUNT(*) as count \n                        FROM employees \n                        WHERE id IS NOT NULL\n                        GROUP BY id \n                        HAVING COUNT(*) > 1\n                    ) AS duplicates\n                ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.550078+00:00'}, {'id': 'b37396e1-4806-4cc2-bbb8-66789b383f7b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_positive', 'description': 'Ensure id has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE id < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.676877+00:00'}, {'id': '90d3a101-d07a-4818-b73d-e880b889eb4b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_positive', 'description': 'Ensure salary has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.779642+00:00'}, {'id': 'f1fa2612-f11c-44dc-a0d2-92e99cb527d9', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_not_zero', 'description': 'Ensure salary has no zero values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary = 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.863703+00:00'}, {'id': '043839d3-6f15-4eec-9eb5-594168ed1592', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_hire_date_reasonable_past', 'description': 'Ensure hire_date contains no unreasonably old dates', 'query': "SELECT COUNT(*) FROM employees WHERE hire_date < '1970-01-01'", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.952874+00:00'}, {'id': '118a5eef-52b2-4fb4-8e01-20ec1d1d5a0a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_valid_email', 'description': 'Ensure email contains valid email format', 'query': "\n                        SELECT COUNT(*) FROM employees \n                        WHERE email IS NOT NULL \n                        AND email NOT LIKE '%@%.%'\n                    ", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:17.041495+00:00'}, {'id': '7c88158a-f73a-4d2d-8415-36780b52adfd', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_outliers', 'description': 'Check for extreme outliers in id (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(id) as avg_val,\n                            STDDEV(id) as stddev_val\n                        FROM employees\n                        WHERE id IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE id > stats.avg_val + 3 * stats.stddev_val\n                    OR id < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.14637+00:00'}, {'id': 'a7fb7d39-9363-4a6f-a408-44d4860907ef', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_outliers', 'description': 'Check for extreme outliers in salary (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(salary) as avg_val,\n                            STDDEV(salary) as stddev_val\n                        FROM employees\n                        WHERE salary IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE salary > stats.avg_val + 3 * stats.stddev_val\n                    OR salary < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.237429+00:00'}, {'id': '2e0774c0-d639-4261-93b2-cf4cf431375d', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_name_null_rate', 'description': 'Ensure name null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE name IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.347274+00:00'}, {'id': '629c51cc-a297-480a-8264-72cd811f2ce1', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_null_rate', 'description': 'Ensure email null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE email IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.454031+00:00'}, {'id': '97770b45-40ce-45ac-b98e-0b725f9db65a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'distinct_salary', 'description': 'number of distinct salaries', 'query': 'select count(distinct salary) from employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-04T03:45:01.277238+00:00'}]
2025-03-04 13:35:14,411 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:35:14] "GET /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:35:14,727 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:35:14,727 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:35:14,989 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:35:14,990 - supabase_profile_history - INFO - supabase_profile_history.py:49 - Supabase Profile History Manager initialized
2025-03-04 13:35:16,953 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:35:16,954 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:35:17,183 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiling_history?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees&order=collected_at.desc&limit=15 "HTTP/1.1 200 OK"
2025-03-04 13:35:17,229 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:35:17] "GET /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 13:35:18,554 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:35:18,827 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:35:18,828 - root - INFO - app.py:264 - Getting validation rules for organization: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees
2025-03-04 13:35:18,828 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 13:35:18,938 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 13:35:18,939 - root - INFO - app.py:266 - Retrieved 13 validation rules
2025-03-04 13:35:18,939 - root - DEBUG - app.py:267 - Rules content: [{'id': 'd62ba05c-31f7-49f9-8fb1-86cc59ff2d10', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_not_empty', 'description': 'Ensure employees table has at least one row', 'query': 'SELECT COUNT(*) FROM employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-03T17:52:54.83168+00:00'}, {'id': 'fd9b0fdb-4fe1-4064-931c-9e04e49f803f', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_row_growth', 'description': 'Detect unusual growth in employees row count (>20% change)', 'query': '\n            WITH current_count AS (\n                SELECT COUNT(*) as count FROM employees\n            ),\n            prev_count AS (\n                -- Replace with your historical count logic or reference table\n                SELECT \n                    CASE \n                        WHEN COUNT(*) = 0 THEN NULL \n                        ELSE COUNT(*) \n                    END as count \n                FROM employees\n            )\n            SELECT \n                CASE\n                    WHEN prev_count.count IS NULL THEN 0\n                    WHEN ABS(current_count.count - prev_count.count) > prev_count.count * 0.2 THEN 1\n                    ELSE 0\n                END\n            FROM current_count, prev_count\n        ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.457964+00:00'}, {'id': 'd7dfcb26-80c0-4aa8-9da5-c93f5e5ec589', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_unique', 'description': 'Check that id values are unique', 'query': '\n                    SELECT COUNT(*) FROM (\n                        SELECT id, COUNT(*) as count \n                        FROM employees \n                        WHERE id IS NOT NULL\n                        GROUP BY id \n                        HAVING COUNT(*) > 1\n                    ) AS duplicates\n                ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.550078+00:00'}, {'id': 'b37396e1-4806-4cc2-bbb8-66789b383f7b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_positive', 'description': 'Ensure id has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE id < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.676877+00:00'}, {'id': '90d3a101-d07a-4818-b73d-e880b889eb4b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_positive', 'description': 'Ensure salary has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.779642+00:00'}, {'id': 'f1fa2612-f11c-44dc-a0d2-92e99cb527d9', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_not_zero', 'description': 'Ensure salary has no zero values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary = 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.863703+00:00'}, {'id': '043839d3-6f15-4eec-9eb5-594168ed1592', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_hire_date_reasonable_past', 'description': 'Ensure hire_date contains no unreasonably old dates', 'query': "SELECT COUNT(*) FROM employees WHERE hire_date < '1970-01-01'", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.952874+00:00'}, {'id': '118a5eef-52b2-4fb4-8e01-20ec1d1d5a0a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_valid_email', 'description': 'Ensure email contains valid email format', 'query': "\n                        SELECT COUNT(*) FROM employees \n                        WHERE email IS NOT NULL \n                        AND email NOT LIKE '%@%.%'\n                    ", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:17.041495+00:00'}, {'id': '7c88158a-f73a-4d2d-8415-36780b52adfd', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_outliers', 'description': 'Check for extreme outliers in id (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(id) as avg_val,\n                            STDDEV(id) as stddev_val\n                        FROM employees\n                        WHERE id IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE id > stats.avg_val + 3 * stats.stddev_val\n                    OR id < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.14637+00:00'}, {'id': 'a7fb7d39-9363-4a6f-a408-44d4860907ef', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_outliers', 'description': 'Check for extreme outliers in salary (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(salary) as avg_val,\n                            STDDEV(salary) as stddev_val\n                        FROM employees\n                        WHERE salary IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE salary > stats.avg_val + 3 * stats.stddev_val\n                    OR salary < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.237429+00:00'}, {'id': '2e0774c0-d639-4261-93b2-cf4cf431375d', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_name_null_rate', 'description': 'Ensure name null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE name IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.347274+00:00'}, {'id': '629c51cc-a297-480a-8264-72cd811f2ce1', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_null_rate', 'description': 'Ensure email null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE email IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.454031+00:00'}, {'id': '97770b45-40ce-45ac-b98e-0b725f9db65a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'distinct_salary', 'description': 'number of distinct salaries', 'query': 'select count(distinct salary) from employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-04T03:45:01.277238+00:00'}]
2025-03-04 13:35:18,948 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:35:18] "GET /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:35:24,949 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:35:24] "OPTIONS /api/validations/97770b45-40ce-45ac-b98e-0b725f9db65a?table=employees HTTP/1.1" 200 -
2025-03-04 13:35:25,212 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:35:25,213 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:35:27,016 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:35:27,017 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:35:28,640 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:35:28,825 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:35:28,826 - root - INFO - app.py:470 - Updating validation rule 97770b45-40ce-45ac-b98e-0b725f9db65a for table employees
2025-03-04 13:35:30,606 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: PATCH https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?id=eq.97770b45-40ce-45ac-b98e-0b725f9db65a&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b "HTTP/1.1 200 OK"
2025-03-04 13:35:30,611 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:35:30] "PUT /api/validations/97770b45-40ce-45ac-b98e-0b725f9db65a?table=employees HTTP/1.1" 200 -
2025-03-04 13:35:30,618 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:35:30] "OPTIONS /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:35:30,923 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:35:30,924 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:35:32,797 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:35:32,798 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:35:34,324 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:35:34,506 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:35:34,507 - root - INFO - app.py:264 - Getting validation rules for organization: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees
2025-03-04 13:35:34,507 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 13:35:34,680 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 13:35:34,682 - root - INFO - app.py:266 - Retrieved 13 validation rules
2025-03-04 13:35:34,682 - root - DEBUG - app.py:267 - Rules content: [{'id': 'd62ba05c-31f7-49f9-8fb1-86cc59ff2d10', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_not_empty', 'description': 'Ensure employees table has at least one row', 'query': 'SELECT COUNT(*) FROM employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-03T17:52:54.83168+00:00'}, {'id': 'fd9b0fdb-4fe1-4064-931c-9e04e49f803f', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_row_growth', 'description': 'Detect unusual growth in employees row count (>20% change)', 'query': '\n            WITH current_count AS (\n                SELECT COUNT(*) as count FROM employees\n            ),\n            prev_count AS (\n                -- Replace with your historical count logic or reference table\n                SELECT \n                    CASE \n                        WHEN COUNT(*) = 0 THEN NULL \n                        ELSE COUNT(*) \n                    END as count \n                FROM employees\n            )\n            SELECT \n                CASE\n                    WHEN prev_count.count IS NULL THEN 0\n                    WHEN ABS(current_count.count - prev_count.count) > prev_count.count * 0.2 THEN 1\n                    ELSE 0\n                END\n            FROM current_count, prev_count\n        ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.457964+00:00'}, {'id': 'd7dfcb26-80c0-4aa8-9da5-c93f5e5ec589', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_unique', 'description': 'Check that id values are unique', 'query': '\n                    SELECT COUNT(*) FROM (\n                        SELECT id, COUNT(*) as count \n                        FROM employees \n                        WHERE id IS NOT NULL\n                        GROUP BY id \n                        HAVING COUNT(*) > 1\n                    ) AS duplicates\n                ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.550078+00:00'}, {'id': 'b37396e1-4806-4cc2-bbb8-66789b383f7b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_positive', 'description': 'Ensure id has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE id < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.676877+00:00'}, {'id': '90d3a101-d07a-4818-b73d-e880b889eb4b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_positive', 'description': 'Ensure salary has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.779642+00:00'}, {'id': 'f1fa2612-f11c-44dc-a0d2-92e99cb527d9', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_not_zero', 'description': 'Ensure salary has no zero values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary = 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.863703+00:00'}, {'id': '043839d3-6f15-4eec-9eb5-594168ed1592', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_hire_date_reasonable_past', 'description': 'Ensure hire_date contains no unreasonably old dates', 'query': "SELECT COUNT(*) FROM employees WHERE hire_date < '1970-01-01'", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.952874+00:00'}, {'id': '118a5eef-52b2-4fb4-8e01-20ec1d1d5a0a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_valid_email', 'description': 'Ensure email contains valid email format', 'query': "\n                        SELECT COUNT(*) FROM employees \n                        WHERE email IS NOT NULL \n                        AND email NOT LIKE '%@%.%'\n                    ", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:17.041495+00:00'}, {'id': '7c88158a-f73a-4d2d-8415-36780b52adfd', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_outliers', 'description': 'Check for extreme outliers in id (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(id) as avg_val,\n                            STDDEV(id) as stddev_val\n                        FROM employees\n                        WHERE id IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE id > stats.avg_val + 3 * stats.stddev_val\n                    OR id < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.14637+00:00'}, {'id': 'a7fb7d39-9363-4a6f-a408-44d4860907ef', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_outliers', 'description': 'Check for extreme outliers in salary (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(salary) as avg_val,\n                            STDDEV(salary) as stddev_val\n                        FROM employees\n                        WHERE salary IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE salary > stats.avg_val + 3 * stats.stddev_val\n                    OR salary < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.237429+00:00'}, {'id': '2e0774c0-d639-4261-93b2-cf4cf431375d', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_name_null_rate', 'description': 'Ensure name null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE name IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.347274+00:00'}, {'id': '629c51cc-a297-480a-8264-72cd811f2ce1', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_null_rate', 'description': 'Ensure email null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE email IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.454031+00:00'}, {'id': '97770b45-40ce-45ac-b98e-0b725f9db65a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'distinct_salary', 'description': 'number of distinct salaries', 'query': 'select count(distinct salary) from employees', 'operator': 'greater_than', 'expected_value': 25, 'created_at': '2025-03-04T03:45:01.277238+00:00'}]
2025-03-04 13:35:34,691 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:35:34] "GET /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:35:42,322 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:35:42] "OPTIONS /api/run-validations HTTP/1.1" 200 -
2025-03-04 13:35:42,636 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:35:42,636 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:35:44,627 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:35:44,629 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:35:46,205 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:35:46,403 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:35:46,404 - root - INFO - app.py:280 - Run validations request: {'connection_string': 'duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi-cloud/backend/my_database.duckdb', 'table': 'employees'}
2025-03-04 13:35:46,404 - root - INFO - app.py:290 - Running validations for org: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees, connection: duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi-cloud/backend/my_database.duckdb
2025-03-04 13:35:46,404 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 13:35:46,705 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 13:35:46,706 - root - INFO - app.py:295 - Found 13 rules to execute
2025-03-04 13:35:48,819 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 13:35:50,624 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 13:35:52,364 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 13:35:54,124 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 13:35:56,001 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 13:35:57,967 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 13:35:59,693 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 13:36:01,505 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 13:36:03,272 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 13:36:05,035 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 13:36:08,280 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 13:36:09,925 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 13:36:11,569 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 13:36:11,571 - root - INFO - app.py:321 - Validation execution complete, got 13 results
2025-03-04 13:36:11,572 - root - DEBUG - app.py:322 - Validation results: [{'rule_name': 'check_employees_not_empty', 'is_valid': True, 'actual_value': 100, 'expected_value': 0, 'description': 'Ensure employees table has at least one row'}, {'rule_name': 'check_employees_row_growth', 'is_valid': True, 'actual_value': 0, 'expected_value': 0, 'description': 'Detect unusual growth in employees row count (>20% change)'}, {'rule_name': 'check_id_unique', 'is_valid': True, 'actual_value': 0, 'expected_value': 0, 'description': 'Check that id values are unique'}, {'rule_name': 'check_id_positive', 'is_valid': True, 'actual_value': 0, 'expected_value': 0, 'description': 'Ensure id has no negative values'}, {'rule_name': 'check_salary_positive', 'is_valid': True, 'actual_value': 0, 'expected_value': 0, 'description': 'Ensure salary has no negative values'}, {'rule_name': 'check_salary_not_zero', 'is_valid': True, 'actual_value': 0, 'expected_value': 0, 'description': 'Ensure salary has no zero values'}, {'rule_name': 'check_hire_date_reasonable_past', 'is_valid': True, 'actual_value': 0, 'expected_value': 0, 'description': 'Ensure hire_date contains no unreasonably old dates'}, {'rule_name': 'check_email_valid_email', 'is_valid': False, 'actual_value': 1, 'expected_value': 0, 'description': 'Ensure email contains valid email format'}, {'rule_name': 'check_id_outliers', 'is_valid': True, 'actual_value': 0, 'expected_value': 5, 'description': 'Check for extreme outliers in id (> 3 std deviations)'}, {'rule_name': 'check_salary_outliers', 'is_valid': True, 'actual_value': 1, 'expected_value': 5, 'description': 'Check for extreme outliers in salary (> 3 std deviations)'}, {'rule_name': 'check_name_null_rate', 'is_valid': True, 'actual_value': 0.0, 'expected_value': 25.0, 'description': 'Ensure name null rate is below acceptable threshold'}, {'rule_name': 'check_email_null_rate', 'is_valid': True, 'actual_value': 0.0, 'expected_value': 25.0, 'description': 'Ensure email null rate is below acceptable threshold'}, {'rule_name': 'distinct_salary', 'is_valid': True, 'actual_value': 94, 'expected_value': 25, 'description': 'number of distinct salaries'}]
2025-03-04 13:36:11,579 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:36:11] "POST /api/run-validations HTTP/1.1" 200 -
2025-03-04 13:37:48,567 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:37:48] "OPTIONS /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 13:37:48,632 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:37:48] "OPTIONS /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 13:37:48,914 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:37:48,914 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:37:51,229 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:37:51,230 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:37:52,675 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:37:52,866 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:37:52,867 - root - INFO - app.py:438 - Getting profile history for table employees, limit 15
2025-03-04 13:37:54,292 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:37:54,293 - supabase_profile_history - INFO - supabase_profile_history.py:49 - Supabase Profile History Manager initialized
2025-03-04 13:37:56,018 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiling_history?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees&order=collected_at.desc&limit=15 "HTTP/1.1 200 OK"
2025-03-04 13:37:56,121 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:37:56] "GET /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 13:37:56,125 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:37:56,125 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:37:56,507 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:37:56] "OPTIONS /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:37:56,509 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:37:56] "OPTIONS /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:37:56,819 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:37:56,819 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:37:58,295 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:37:58,296 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:37:59,003 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:37:59,003 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:38:00,213 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:38:00,412 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:38:00,413 - root - INFO - app.py:438 - Getting profile history for table employees, limit 15
2025-03-04 13:38:00,984 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:38:01,253 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:38:01,254 - root - INFO - app.py:264 - Getting validation rules for organization: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees
2025-03-04 13:38:01,255 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 13:38:01,455 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 13:38:01,456 - root - INFO - app.py:266 - Retrieved 13 validation rules
2025-03-04 13:38:01,456 - root - DEBUG - app.py:267 - Rules content: [{'id': 'd62ba05c-31f7-49f9-8fb1-86cc59ff2d10', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_not_empty', 'description': 'Ensure employees table has at least one row', 'query': 'SELECT COUNT(*) FROM employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-03T17:52:54.83168+00:00'}, {'id': 'fd9b0fdb-4fe1-4064-931c-9e04e49f803f', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_row_growth', 'description': 'Detect unusual growth in employees row count (>20% change)', 'query': '\n            WITH current_count AS (\n                SELECT COUNT(*) as count FROM employees\n            ),\n            prev_count AS (\n                -- Replace with your historical count logic or reference table\n                SELECT \n                    CASE \n                        WHEN COUNT(*) = 0 THEN NULL \n                        ELSE COUNT(*) \n                    END as count \n                FROM employees\n            )\n            SELECT \n                CASE\n                    WHEN prev_count.count IS NULL THEN 0\n                    WHEN ABS(current_count.count - prev_count.count) > prev_count.count * 0.2 THEN 1\n                    ELSE 0\n                END\n            FROM current_count, prev_count\n        ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.457964+00:00'}, {'id': 'd7dfcb26-80c0-4aa8-9da5-c93f5e5ec589', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_unique', 'description': 'Check that id values are unique', 'query': '\n                    SELECT COUNT(*) FROM (\n                        SELECT id, COUNT(*) as count \n                        FROM employees \n                        WHERE id IS NOT NULL\n                        GROUP BY id \n                        HAVING COUNT(*) > 1\n                    ) AS duplicates\n                ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.550078+00:00'}, {'id': 'b37396e1-4806-4cc2-bbb8-66789b383f7b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_positive', 'description': 'Ensure id has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE id < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.676877+00:00'}, {'id': '90d3a101-d07a-4818-b73d-e880b889eb4b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_positive', 'description': 'Ensure salary has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.779642+00:00'}, {'id': 'f1fa2612-f11c-44dc-a0d2-92e99cb527d9', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_not_zero', 'description': 'Ensure salary has no zero values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary = 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.863703+00:00'}, {'id': '043839d3-6f15-4eec-9eb5-594168ed1592', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_hire_date_reasonable_past', 'description': 'Ensure hire_date contains no unreasonably old dates', 'query': "SELECT COUNT(*) FROM employees WHERE hire_date < '1970-01-01'", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.952874+00:00'}, {'id': '118a5eef-52b2-4fb4-8e01-20ec1d1d5a0a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_valid_email', 'description': 'Ensure email contains valid email format', 'query': "\n                        SELECT COUNT(*) FROM employees \n                        WHERE email IS NOT NULL \n                        AND email NOT LIKE '%@%.%'\n                    ", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:17.041495+00:00'}, {'id': '7c88158a-f73a-4d2d-8415-36780b52adfd', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_outliers', 'description': 'Check for extreme outliers in id (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(id) as avg_val,\n                            STDDEV(id) as stddev_val\n                        FROM employees\n                        WHERE id IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE id > stats.avg_val + 3 * stats.stddev_val\n                    OR id < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.14637+00:00'}, {'id': 'a7fb7d39-9363-4a6f-a408-44d4860907ef', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_outliers', 'description': 'Check for extreme outliers in salary (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(salary) as avg_val,\n                            STDDEV(salary) as stddev_val\n                        FROM employees\n                        WHERE salary IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE salary > stats.avg_val + 3 * stats.stddev_val\n                    OR salary < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.237429+00:00'}, {'id': '2e0774c0-d639-4261-93b2-cf4cf431375d', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_name_null_rate', 'description': 'Ensure name null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE name IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.347274+00:00'}, {'id': '629c51cc-a297-480a-8264-72cd811f2ce1', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_null_rate', 'description': 'Ensure email null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE email IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.454031+00:00'}, {'id': '97770b45-40ce-45ac-b98e-0b725f9db65a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'distinct_salary', 'description': 'number of distinct salaries', 'query': 'select count(distinct salary) from employees', 'operator': 'greater_than', 'expected_value': 25, 'created_at': '2025-03-04T03:45:01.277238+00:00'}]
2025-03-04 13:38:01,463 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:38:01] "GET /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 13:38:01,779 - root - DEBUG - app.py:123 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 13:38:01,779 - root - DEBUG - app.py:124 - Supabase Service Key: True
2025-03-04 13:38:02,203 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:38:02,203 - supabase_profile_history - INFO - supabase_profile_history.py:49 - Supabase Profile History Manager initialized
2025-03-04 13:38:04,523 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 13:38:04,525 - root - INFO - app.py:136 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 13:38:05,084 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiling_history?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees&order=collected_at.desc&limit=15 "HTTP/1.1 200 OK"
2025-03-04 13:38:05,148 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:38:05] "GET /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 13:38:06,391 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 13:38:06,668 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 13:38:06,668 - root - INFO - app.py:264 - Getting validation rules for organization: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees
2025-03-04 13:38:06,669 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 13:38:06,865 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 13:38:06,866 - root - INFO - app.py:266 - Retrieved 13 validation rules
2025-03-04 13:38:06,867 - root - DEBUG - app.py:267 - Rules content: [{'id': 'd62ba05c-31f7-49f9-8fb1-86cc59ff2d10', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_not_empty', 'description': 'Ensure employees table has at least one row', 'query': 'SELECT COUNT(*) FROM employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-03T17:52:54.83168+00:00'}, {'id': 'fd9b0fdb-4fe1-4064-931c-9e04e49f803f', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_row_growth', 'description': 'Detect unusual growth in employees row count (>20% change)', 'query': '\n            WITH current_count AS (\n                SELECT COUNT(*) as count FROM employees\n            ),\n            prev_count AS (\n                -- Replace with your historical count logic or reference table\n                SELECT \n                    CASE \n                        WHEN COUNT(*) = 0 THEN NULL \n                        ELSE COUNT(*) \n                    END as count \n                FROM employees\n            )\n            SELECT \n                CASE\n                    WHEN prev_count.count IS NULL THEN 0\n                    WHEN ABS(current_count.count - prev_count.count) > prev_count.count * 0.2 THEN 1\n                    ELSE 0\n                END\n            FROM current_count, prev_count\n        ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.457964+00:00'}, {'id': 'd7dfcb26-80c0-4aa8-9da5-c93f5e5ec589', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_unique', 'description': 'Check that id values are unique', 'query': '\n                    SELECT COUNT(*) FROM (\n                        SELECT id, COUNT(*) as count \n                        FROM employees \n                        WHERE id IS NOT NULL\n                        GROUP BY id \n                        HAVING COUNT(*) > 1\n                    ) AS duplicates\n                ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.550078+00:00'}, {'id': 'b37396e1-4806-4cc2-bbb8-66789b383f7b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_positive', 'description': 'Ensure id has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE id < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.676877+00:00'}, {'id': '90d3a101-d07a-4818-b73d-e880b889eb4b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_positive', 'description': 'Ensure salary has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.779642+00:00'}, {'id': 'f1fa2612-f11c-44dc-a0d2-92e99cb527d9', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_not_zero', 'description': 'Ensure salary has no zero values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary = 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.863703+00:00'}, {'id': '043839d3-6f15-4eec-9eb5-594168ed1592', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_hire_date_reasonable_past', 'description': 'Ensure hire_date contains no unreasonably old dates', 'query': "SELECT COUNT(*) FROM employees WHERE hire_date < '1970-01-01'", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.952874+00:00'}, {'id': '118a5eef-52b2-4fb4-8e01-20ec1d1d5a0a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_valid_email', 'description': 'Ensure email contains valid email format', 'query': "\n                        SELECT COUNT(*) FROM employees \n                        WHERE email IS NOT NULL \n                        AND email NOT LIKE '%@%.%'\n                    ", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:17.041495+00:00'}, {'id': '7c88158a-f73a-4d2d-8415-36780b52adfd', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_outliers', 'description': 'Check for extreme outliers in id (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(id) as avg_val,\n                            STDDEV(id) as stddev_val\n                        FROM employees\n                        WHERE id IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE id > stats.avg_val + 3 * stats.stddev_val\n                    OR id < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.14637+00:00'}, {'id': 'a7fb7d39-9363-4a6f-a408-44d4860907ef', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_outliers', 'description': 'Check for extreme outliers in salary (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(salary) as avg_val,\n                            STDDEV(salary) as stddev_val\n                        FROM employees\n                        WHERE salary IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE salary > stats.avg_val + 3 * stats.stddev_val\n                    OR salary < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.237429+00:00'}, {'id': '2e0774c0-d639-4261-93b2-cf4cf431375d', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_name_null_rate', 'description': 'Ensure name null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE name IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.347274+00:00'}, {'id': '629c51cc-a297-480a-8264-72cd811f2ce1', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_null_rate', 'description': 'Ensure email null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE email IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.454031+00:00'}, {'id': '97770b45-40ce-45ac-b98e-0b725f9db65a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'distinct_salary', 'description': 'number of distinct salaries', 'query': 'select count(distinct salary) from employees', 'operator': 'greater_than', 'expected_value': 25, 'created_at': '2025-03-04T03:45:01.277238+00:00'}]
2025-03-04 13:38:06,873 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 13:38:06] "GET /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 16:47:11,294 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 16:47:11,294 - supabase_validation_manager - INFO - supabase_validation_manager.py:49 - Supabase Validation Manager initialized
2025-03-04 16:47:11,327 - werkzeug - INFO - _internal.py:224 -  * Running on http://127.0.0.1:5000 (Press CTRL+C to quit)
2025-03-04 16:47:11,330 - werkzeug - INFO - _internal.py:224 -  * Restarting with stat
2025-03-04 16:47:14,873 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 16:47:14,874 - supabase_validation_manager - INFO - supabase_validation_manager.py:49 - Supabase Validation Manager initialized
2025-03-04 16:47:14,890 - werkzeug - WARNING - _internal.py:224 -  * Debugger is active!
2025-03-04 16:47:14,899 - werkzeug - INFO - _internal.py:224 -  * Debugger PIN: 121-941-094
2025-03-04 16:47:55,432 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 16:47:55] "OPTIONS /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 16:47:55,436 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 16:47:55] "OPTIONS /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 16:47:55,695 - root - DEBUG - app.py:114 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 16:47:55,696 - root - DEBUG - app.py:115 - Supabase Service Key: True
2025-03-04 16:47:57,851 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 16:47:57,857 - root - INFO - app.py:127 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 16:47:59,419 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 16:47:59,737 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 16:47:59,742 - root - INFO - app.py:429 - Getting profile history for table employees, limit 15
2025-03-04 16:48:01,287 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 16:48:01,288 - supabase_profile_history - INFO - supabase_profile_history.py:49 - Supabase Profile History Manager initialized
2025-03-04 16:48:03,278 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiling_history?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees&order=collected_at.desc&limit=15 "HTTP/1.1 200 OK"
2025-03-04 16:48:03,313 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 16:48:03] "GET /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 16:48:03,319 - root - DEBUG - app.py:114 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 16:48:03,319 - root - DEBUG - app.py:115 - Supabase Service Key: True
2025-03-04 16:48:03,704 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 16:48:03] "OPTIONS /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 16:48:03,705 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 16:48:03] "OPTIONS /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 16:48:04,019 - root - DEBUG - app.py:114 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 16:48:04,020 - root - DEBUG - app.py:115 - Supabase Service Key: True
2025-03-04 16:48:05,609 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 16:48:05,610 - root - INFO - app.py:127 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 16:48:06,718 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 16:48:06,719 - root - INFO - app.py:127 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 16:48:07,971 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 16:48:08,226 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 16:48:08,227 - root - INFO - app.py:429 - Getting profile history for table employees, limit 15
2025-03-04 16:48:09,159 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 16:48:09,337 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 16:48:09,339 - root - INFO - app.py:255 - Getting validation rules for organization: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees
2025-03-04 16:48:09,339 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 16:48:09,541 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 16:48:09,542 - root - INFO - app.py:257 - Retrieved 13 validation rules
2025-03-04 16:48:09,542 - root - DEBUG - app.py:258 - Rules content: [{'id': 'd62ba05c-31f7-49f9-8fb1-86cc59ff2d10', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_not_empty', 'description': 'Ensure employees table has at least one row', 'query': 'SELECT COUNT(*) FROM employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-03T17:52:54.83168+00:00'}, {'id': 'fd9b0fdb-4fe1-4064-931c-9e04e49f803f', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_row_growth', 'description': 'Detect unusual growth in employees row count (>20% change)', 'query': '\n            WITH current_count AS (\n                SELECT COUNT(*) as count FROM employees\n            ),\n            prev_count AS (\n                -- Replace with your historical count logic or reference table\n                SELECT \n                    CASE \n                        WHEN COUNT(*) = 0 THEN NULL \n                        ELSE COUNT(*) \n                    END as count \n                FROM employees\n            )\n            SELECT \n                CASE\n                    WHEN prev_count.count IS NULL THEN 0\n                    WHEN ABS(current_count.count - prev_count.count) > prev_count.count * 0.2 THEN 1\n                    ELSE 0\n                END\n            FROM current_count, prev_count\n        ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.457964+00:00'}, {'id': 'd7dfcb26-80c0-4aa8-9da5-c93f5e5ec589', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_unique', 'description': 'Check that id values are unique', 'query': '\n                    SELECT COUNT(*) FROM (\n                        SELECT id, COUNT(*) as count \n                        FROM employees \n                        WHERE id IS NOT NULL\n                        GROUP BY id \n                        HAVING COUNT(*) > 1\n                    ) AS duplicates\n                ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.550078+00:00'}, {'id': 'b37396e1-4806-4cc2-bbb8-66789b383f7b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_positive', 'description': 'Ensure id has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE id < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.676877+00:00'}, {'id': '90d3a101-d07a-4818-b73d-e880b889eb4b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_positive', 'description': 'Ensure salary has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.779642+00:00'}, {'id': 'f1fa2612-f11c-44dc-a0d2-92e99cb527d9', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_not_zero', 'description': 'Ensure salary has no zero values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary = 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.863703+00:00'}, {'id': '043839d3-6f15-4eec-9eb5-594168ed1592', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_hire_date_reasonable_past', 'description': 'Ensure hire_date contains no unreasonably old dates', 'query': "SELECT COUNT(*) FROM employees WHERE hire_date < '1970-01-01'", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.952874+00:00'}, {'id': '118a5eef-52b2-4fb4-8e01-20ec1d1d5a0a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_valid_email', 'description': 'Ensure email contains valid email format', 'query': "\n                        SELECT COUNT(*) FROM employees \n                        WHERE email IS NOT NULL \n                        AND email NOT LIKE '%@%.%'\n                    ", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:17.041495+00:00'}, {'id': '7c88158a-f73a-4d2d-8415-36780b52adfd', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_outliers', 'description': 'Check for extreme outliers in id (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(id) as avg_val,\n                            STDDEV(id) as stddev_val\n                        FROM employees\n                        WHERE id IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE id > stats.avg_val + 3 * stats.stddev_val\n                    OR id < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.14637+00:00'}, {'id': 'a7fb7d39-9363-4a6f-a408-44d4860907ef', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_outliers', 'description': 'Check for extreme outliers in salary (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(salary) as avg_val,\n                            STDDEV(salary) as stddev_val\n                        FROM employees\n                        WHERE salary IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE salary > stats.avg_val + 3 * stats.stddev_val\n                    OR salary < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.237429+00:00'}, {'id': '2e0774c0-d639-4261-93b2-cf4cf431375d', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_name_null_rate', 'description': 'Ensure name null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE name IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.347274+00:00'}, {'id': '629c51cc-a297-480a-8264-72cd811f2ce1', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_null_rate', 'description': 'Ensure email null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE email IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.454031+00:00'}, {'id': '97770b45-40ce-45ac-b98e-0b725f9db65a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'distinct_salary', 'description': 'number of distinct salaries', 'query': 'select count(distinct salary) from employees', 'operator': 'greater_than', 'expected_value': 25, 'created_at': '2025-03-04T03:45:01.277238+00:00'}]
2025-03-04 16:48:09,551 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 16:48:09] "GET /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 16:48:09,868 - root - DEBUG - app.py:114 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 16:48:09,869 - root - DEBUG - app.py:115 - Supabase Service Key: True
2025-03-04 16:48:10,660 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 16:48:10,660 - supabase_profile_history - INFO - supabase_profile_history.py:49 - Supabase Profile History Manager initialized
2025-03-04 16:48:12,458 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 16:48:12,459 - root - INFO - app.py:127 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 16:48:13,375 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiling_history?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees&order=collected_at.desc&limit=15 "HTTP/1.1 200 OK"
2025-03-04 16:48:13,423 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 16:48:13] "GET /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 16:48:14,402 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 16:48:14,632 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 16:48:14,632 - root - INFO - app.py:255 - Getting validation rules for organization: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees
2025-03-04 16:48:14,633 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 16:48:14,942 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 16:48:14,943 - root - INFO - app.py:257 - Retrieved 13 validation rules
2025-03-04 16:48:14,943 - root - DEBUG - app.py:258 - Rules content: [{'id': 'd62ba05c-31f7-49f9-8fb1-86cc59ff2d10', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_not_empty', 'description': 'Ensure employees table has at least one row', 'query': 'SELECT COUNT(*) FROM employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-03T17:52:54.83168+00:00'}, {'id': 'fd9b0fdb-4fe1-4064-931c-9e04e49f803f', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_row_growth', 'description': 'Detect unusual growth in employees row count (>20% change)', 'query': '\n            WITH current_count AS (\n                SELECT COUNT(*) as count FROM employees\n            ),\n            prev_count AS (\n                -- Replace with your historical count logic or reference table\n                SELECT \n                    CASE \n                        WHEN COUNT(*) = 0 THEN NULL \n                        ELSE COUNT(*) \n                    END as count \n                FROM employees\n            )\n            SELECT \n                CASE\n                    WHEN prev_count.count IS NULL THEN 0\n                    WHEN ABS(current_count.count - prev_count.count) > prev_count.count * 0.2 THEN 1\n                    ELSE 0\n                END\n            FROM current_count, prev_count\n        ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.457964+00:00'}, {'id': 'd7dfcb26-80c0-4aa8-9da5-c93f5e5ec589', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_unique', 'description': 'Check that id values are unique', 'query': '\n                    SELECT COUNT(*) FROM (\n                        SELECT id, COUNT(*) as count \n                        FROM employees \n                        WHERE id IS NOT NULL\n                        GROUP BY id \n                        HAVING COUNT(*) > 1\n                    ) AS duplicates\n                ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.550078+00:00'}, {'id': 'b37396e1-4806-4cc2-bbb8-66789b383f7b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_positive', 'description': 'Ensure id has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE id < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.676877+00:00'}, {'id': '90d3a101-d07a-4818-b73d-e880b889eb4b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_positive', 'description': 'Ensure salary has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.779642+00:00'}, {'id': 'f1fa2612-f11c-44dc-a0d2-92e99cb527d9', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_not_zero', 'description': 'Ensure salary has no zero values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary = 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.863703+00:00'}, {'id': '043839d3-6f15-4eec-9eb5-594168ed1592', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_hire_date_reasonable_past', 'description': 'Ensure hire_date contains no unreasonably old dates', 'query': "SELECT COUNT(*) FROM employees WHERE hire_date < '1970-01-01'", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.952874+00:00'}, {'id': '118a5eef-52b2-4fb4-8e01-20ec1d1d5a0a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_valid_email', 'description': 'Ensure email contains valid email format', 'query': "\n                        SELECT COUNT(*) FROM employees \n                        WHERE email IS NOT NULL \n                        AND email NOT LIKE '%@%.%'\n                    ", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:17.041495+00:00'}, {'id': '7c88158a-f73a-4d2d-8415-36780b52adfd', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_outliers', 'description': 'Check for extreme outliers in id (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(id) as avg_val,\n                            STDDEV(id) as stddev_val\n                        FROM employees\n                        WHERE id IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE id > stats.avg_val + 3 * stats.stddev_val\n                    OR id < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.14637+00:00'}, {'id': 'a7fb7d39-9363-4a6f-a408-44d4860907ef', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_outliers', 'description': 'Check for extreme outliers in salary (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(salary) as avg_val,\n                            STDDEV(salary) as stddev_val\n                        FROM employees\n                        WHERE salary IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE salary > stats.avg_val + 3 * stats.stddev_val\n                    OR salary < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.237429+00:00'}, {'id': '2e0774c0-d639-4261-93b2-cf4cf431375d', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_name_null_rate', 'description': 'Ensure name null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE name IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.347274+00:00'}, {'id': '629c51cc-a297-480a-8264-72cd811f2ce1', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_null_rate', 'description': 'Ensure email null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE email IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.454031+00:00'}, {'id': '97770b45-40ce-45ac-b98e-0b725f9db65a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'distinct_salary', 'description': 'number of distinct salaries', 'query': 'select count(distinct salary) from employees', 'operator': 'greater_than', 'expected_value': 25, 'created_at': '2025-03-04T03:45:01.277238+00:00'}]
2025-03-04 16:48:14,952 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 16:48:14] "GET /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 16:48:21,572 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 16:48:21] "OPTIONS /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 16:48:21,575 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 16:48:21] "OPTIONS /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 16:48:21,839 - root - DEBUG - app.py:114 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 16:48:21,839 - root - DEBUG - app.py:115 - Supabase Service Key: True
2025-03-04 16:48:23,736 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 16:48:23,737 - root - INFO - app.py:127 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 16:48:25,366 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 16:48:25,539 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 16:48:25,539 - root - INFO - app.py:255 - Getting validation rules for organization: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees
2025-03-04 16:48:25,540 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 16:48:25,702 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 16:48:25,704 - root - INFO - app.py:257 - Retrieved 13 validation rules
2025-03-04 16:48:25,704 - root - DEBUG - app.py:258 - Rules content: [{'id': 'd62ba05c-31f7-49f9-8fb1-86cc59ff2d10', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_not_empty', 'description': 'Ensure employees table has at least one row', 'query': 'SELECT COUNT(*) FROM employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-03T17:52:54.83168+00:00'}, {'id': 'fd9b0fdb-4fe1-4064-931c-9e04e49f803f', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_row_growth', 'description': 'Detect unusual growth in employees row count (>20% change)', 'query': '\n            WITH current_count AS (\n                SELECT COUNT(*) as count FROM employees\n            ),\n            prev_count AS (\n                -- Replace with your historical count logic or reference table\n                SELECT \n                    CASE \n                        WHEN COUNT(*) = 0 THEN NULL \n                        ELSE COUNT(*) \n                    END as count \n                FROM employees\n            )\n            SELECT \n                CASE\n                    WHEN prev_count.count IS NULL THEN 0\n                    WHEN ABS(current_count.count - prev_count.count) > prev_count.count * 0.2 THEN 1\n                    ELSE 0\n                END\n            FROM current_count, prev_count\n        ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.457964+00:00'}, {'id': 'd7dfcb26-80c0-4aa8-9da5-c93f5e5ec589', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_unique', 'description': 'Check that id values are unique', 'query': '\n                    SELECT COUNT(*) FROM (\n                        SELECT id, COUNT(*) as count \n                        FROM employees \n                        WHERE id IS NOT NULL\n                        GROUP BY id \n                        HAVING COUNT(*) > 1\n                    ) AS duplicates\n                ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.550078+00:00'}, {'id': 'b37396e1-4806-4cc2-bbb8-66789b383f7b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_positive', 'description': 'Ensure id has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE id < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.676877+00:00'}, {'id': '90d3a101-d07a-4818-b73d-e880b889eb4b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_positive', 'description': 'Ensure salary has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.779642+00:00'}, {'id': 'f1fa2612-f11c-44dc-a0d2-92e99cb527d9', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_not_zero', 'description': 'Ensure salary has no zero values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary = 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.863703+00:00'}, {'id': '043839d3-6f15-4eec-9eb5-594168ed1592', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_hire_date_reasonable_past', 'description': 'Ensure hire_date contains no unreasonably old dates', 'query': "SELECT COUNT(*) FROM employees WHERE hire_date < '1970-01-01'", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.952874+00:00'}, {'id': '118a5eef-52b2-4fb4-8e01-20ec1d1d5a0a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_valid_email', 'description': 'Ensure email contains valid email format', 'query': "\n                        SELECT COUNT(*) FROM employees \n                        WHERE email IS NOT NULL \n                        AND email NOT LIKE '%@%.%'\n                    ", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:17.041495+00:00'}, {'id': '7c88158a-f73a-4d2d-8415-36780b52adfd', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_outliers', 'description': 'Check for extreme outliers in id (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(id) as avg_val,\n                            STDDEV(id) as stddev_val\n                        FROM employees\n                        WHERE id IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE id > stats.avg_val + 3 * stats.stddev_val\n                    OR id < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.14637+00:00'}, {'id': 'a7fb7d39-9363-4a6f-a408-44d4860907ef', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_outliers', 'description': 'Check for extreme outliers in salary (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(salary) as avg_val,\n                            STDDEV(salary) as stddev_val\n                        FROM employees\n                        WHERE salary IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE salary > stats.avg_val + 3 * stats.stddev_val\n                    OR salary < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.237429+00:00'}, {'id': '2e0774c0-d639-4261-93b2-cf4cf431375d', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_name_null_rate', 'description': 'Ensure name null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE name IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.347274+00:00'}, {'id': '629c51cc-a297-480a-8264-72cd811f2ce1', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_null_rate', 'description': 'Ensure email null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE email IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.454031+00:00'}, {'id': '97770b45-40ce-45ac-b98e-0b725f9db65a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'distinct_salary', 'description': 'number of distinct salaries', 'query': 'select count(distinct salary) from employees', 'operator': 'greater_than', 'expected_value': 25, 'created_at': '2025-03-04T03:45:01.277238+00:00'}]
2025-03-04 16:48:25,712 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 16:48:25] "GET /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 16:48:25,716 - root - DEBUG - app.py:114 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 16:48:25,716 - root - DEBUG - app.py:115 - Supabase Service Key: True
2025-03-04 16:48:27,435 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 16:48:27,437 - root - INFO - app.py:127 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 16:48:28,914 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 16:48:29,178 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 16:48:29,179 - root - INFO - app.py:255 - Getting validation rules for organization: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees
2025-03-04 16:48:29,179 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 16:48:29,268 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 16:48:29,269 - root - INFO - app.py:257 - Retrieved 13 validation rules
2025-03-04 16:48:29,269 - root - DEBUG - app.py:258 - Rules content: [{'id': 'd62ba05c-31f7-49f9-8fb1-86cc59ff2d10', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_not_empty', 'description': 'Ensure employees table has at least one row', 'query': 'SELECT COUNT(*) FROM employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-03T17:52:54.83168+00:00'}, {'id': 'fd9b0fdb-4fe1-4064-931c-9e04e49f803f', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_row_growth', 'description': 'Detect unusual growth in employees row count (>20% change)', 'query': '\n            WITH current_count AS (\n                SELECT COUNT(*) as count FROM employees\n            ),\n            prev_count AS (\n                -- Replace with your historical count logic or reference table\n                SELECT \n                    CASE \n                        WHEN COUNT(*) = 0 THEN NULL \n                        ELSE COUNT(*) \n                    END as count \n                FROM employees\n            )\n            SELECT \n                CASE\n                    WHEN prev_count.count IS NULL THEN 0\n                    WHEN ABS(current_count.count - prev_count.count) > prev_count.count * 0.2 THEN 1\n                    ELSE 0\n                END\n            FROM current_count, prev_count\n        ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.457964+00:00'}, {'id': 'd7dfcb26-80c0-4aa8-9da5-c93f5e5ec589', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_unique', 'description': 'Check that id values are unique', 'query': '\n                    SELECT COUNT(*) FROM (\n                        SELECT id, COUNT(*) as count \n                        FROM employees \n                        WHERE id IS NOT NULL\n                        GROUP BY id \n                        HAVING COUNT(*) > 1\n                    ) AS duplicates\n                ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.550078+00:00'}, {'id': 'b37396e1-4806-4cc2-bbb8-66789b383f7b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_positive', 'description': 'Ensure id has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE id < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.676877+00:00'}, {'id': '90d3a101-d07a-4818-b73d-e880b889eb4b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_positive', 'description': 'Ensure salary has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.779642+00:00'}, {'id': 'f1fa2612-f11c-44dc-a0d2-92e99cb527d9', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_not_zero', 'description': 'Ensure salary has no zero values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary = 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.863703+00:00'}, {'id': '043839d3-6f15-4eec-9eb5-594168ed1592', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_hire_date_reasonable_past', 'description': 'Ensure hire_date contains no unreasonably old dates', 'query': "SELECT COUNT(*) FROM employees WHERE hire_date < '1970-01-01'", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.952874+00:00'}, {'id': '118a5eef-52b2-4fb4-8e01-20ec1d1d5a0a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_valid_email', 'description': 'Ensure email contains valid email format', 'query': "\n                        SELECT COUNT(*) FROM employees \n                        WHERE email IS NOT NULL \n                        AND email NOT LIKE '%@%.%'\n                    ", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:17.041495+00:00'}, {'id': '7c88158a-f73a-4d2d-8415-36780b52adfd', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_outliers', 'description': 'Check for extreme outliers in id (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(id) as avg_val,\n                            STDDEV(id) as stddev_val\n                        FROM employees\n                        WHERE id IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE id > stats.avg_val + 3 * stats.stddev_val\n                    OR id < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.14637+00:00'}, {'id': 'a7fb7d39-9363-4a6f-a408-44d4860907ef', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_outliers', 'description': 'Check for extreme outliers in salary (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(salary) as avg_val,\n                            STDDEV(salary) as stddev_val\n                        FROM employees\n                        WHERE salary IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE salary > stats.avg_val + 3 * stats.stddev_val\n                    OR salary < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.237429+00:00'}, {'id': '2e0774c0-d639-4261-93b2-cf4cf431375d', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_name_null_rate', 'description': 'Ensure name null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE name IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.347274+00:00'}, {'id': '629c51cc-a297-480a-8264-72cd811f2ce1', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_null_rate', 'description': 'Ensure email null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE email IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.454031+00:00'}, {'id': '97770b45-40ce-45ac-b98e-0b725f9db65a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'distinct_salary', 'description': 'number of distinct salaries', 'query': 'select count(distinct salary) from employees', 'operator': 'greater_than', 'expected_value': 25, 'created_at': '2025-03-04T03:45:01.277238+00:00'}]
2025-03-04 16:48:29,276 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 16:48:29] "GET /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 16:48:43,273 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 16:48:43] "OPTIONS /api/run-validations HTTP/1.1" 200 -
2025-03-04 16:48:43,537 - root - DEBUG - app.py:114 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 16:48:43,537 - root - DEBUG - app.py:115 - Supabase Service Key: True
2025-03-04 16:48:45,470 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 16:48:45,471 - root - INFO - app.py:127 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 16:48:47,021 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 16:48:47,223 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 16:48:47,225 - root - INFO - app.py:271 - Run validations request: {'connection_string': 'duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi-cloud/backend/my_database.duckdb', 'table': 'employees'}
2025-03-04 16:48:47,225 - root - INFO - app.py:281 - Running validations for org: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees, connection: duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi-cloud/backend/my_database.duckdb
2025-03-04 16:48:47,225 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 16:48:47,415 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 16:48:47,416 - root - INFO - app.py:286 - Found 13 rules to execute
2025-03-04 16:48:50,076 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 16:48:51,837 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 16:48:53,781 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 16:48:56,045 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 16:48:58,768 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 16:49:00,943 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 16:49:03,015 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 16:49:04,860 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 16:49:07,815 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 16:49:10,223 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 16:49:12,327 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 16:49:14,223 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 16:49:16,630 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 16:49:16,632 - root - INFO - app.py:312 - Validation execution complete, got 13 results
2025-03-04 16:49:16,635 - root - DEBUG - app.py:313 - Validation results: [{'rule_name': 'check_employees_not_empty', 'is_valid': True, 'actual_value': 100, 'expected_value': 0, 'description': 'Ensure employees table has at least one row'}, {'rule_name': 'check_employees_row_growth', 'is_valid': True, 'actual_value': 0, 'expected_value': 0, 'description': 'Detect unusual growth in employees row count (>20% change)'}, {'rule_name': 'check_id_unique', 'is_valid': True, 'actual_value': 0, 'expected_value': 0, 'description': 'Check that id values are unique'}, {'rule_name': 'check_id_positive', 'is_valid': True, 'actual_value': 0, 'expected_value': 0, 'description': 'Ensure id has no negative values'}, {'rule_name': 'check_salary_positive', 'is_valid': True, 'actual_value': 0, 'expected_value': 0, 'description': 'Ensure salary has no negative values'}, {'rule_name': 'check_salary_not_zero', 'is_valid': True, 'actual_value': 0, 'expected_value': 0, 'description': 'Ensure salary has no zero values'}, {'rule_name': 'check_hire_date_reasonable_past', 'is_valid': True, 'actual_value': 0, 'expected_value': 0, 'description': 'Ensure hire_date contains no unreasonably old dates'}, {'rule_name': 'check_email_valid_email', 'is_valid': False, 'actual_value': 1, 'expected_value': 0, 'description': 'Ensure email contains valid email format'}, {'rule_name': 'check_id_outliers', 'is_valid': True, 'actual_value': 0, 'expected_value': 5, 'description': 'Check for extreme outliers in id (> 3 std deviations)'}, {'rule_name': 'check_salary_outliers', 'is_valid': True, 'actual_value': 1, 'expected_value': 5, 'description': 'Check for extreme outliers in salary (> 3 std deviations)'}, {'rule_name': 'check_name_null_rate', 'is_valid': True, 'actual_value': 0.0, 'expected_value': 25.0, 'description': 'Ensure name null rate is below acceptable threshold'}, {'rule_name': 'check_email_null_rate', 'is_valid': True, 'actual_value': 0.0, 'expected_value': 25.0, 'description': 'Ensure email null rate is below acceptable threshold'}, {'rule_name': 'distinct_salary', 'is_valid': True, 'actual_value': 94, 'expected_value': 25, 'description': 'number of distinct salaries'}]
2025-03-04 16:49:16,647 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 16:49:16] "POST /api/run-validations HTTP/1.1" 200 -
2025-03-04 16:49:34,945 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 16:49:34] "OPTIONS /api/validations/97770b45-40ce-45ac-b98e-0b725f9db65a?table=employees HTTP/1.1" 200 -
2025-03-04 16:49:35,255 - root - DEBUG - app.py:114 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 16:49:35,256 - root - DEBUG - app.py:115 - Supabase Service Key: True
2025-03-04 16:49:37,262 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 16:49:37,263 - root - INFO - app.py:127 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 16:49:38,918 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 16:49:39,092 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 16:49:39,094 - root - INFO - app.py:461 - Updating validation rule 97770b45-40ce-45ac-b98e-0b725f9db65a for table employees
2025-03-04 16:49:41,018 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: PATCH https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?id=eq.97770b45-40ce-45ac-b98e-0b725f9db65a&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b "HTTP/1.1 200 OK"
2025-03-04 16:49:41,023 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 16:49:41] "PUT /api/validations/97770b45-40ce-45ac-b98e-0b725f9db65a?table=employees HTTP/1.1" 200 -
2025-03-04 16:49:41,028 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 16:49:41] "OPTIONS /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 16:49:41,336 - root - DEBUG - app.py:114 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 16:49:41,337 - root - DEBUG - app.py:115 - Supabase Service Key: True
2025-03-04 16:49:43,574 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 16:49:43,575 - root - INFO - app.py:127 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 16:49:45,221 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 16:49:45,450 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 16:49:45,452 - root - INFO - app.py:255 - Getting validation rules for organization: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees
2025-03-04 16:49:45,452 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 16:49:45,690 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 16:49:45,694 - root - INFO - app.py:257 - Retrieved 13 validation rules
2025-03-04 16:49:45,695 - root - DEBUG - app.py:258 - Rules content: [{'id': 'd62ba05c-31f7-49f9-8fb1-86cc59ff2d10', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_not_empty', 'description': 'Ensure employees table has at least one row', 'query': 'SELECT COUNT(*) FROM employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-03T17:52:54.83168+00:00'}, {'id': 'fd9b0fdb-4fe1-4064-931c-9e04e49f803f', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_row_growth', 'description': 'Detect unusual growth in employees row count (>20% change)', 'query': '\n            WITH current_count AS (\n                SELECT COUNT(*) as count FROM employees\n            ),\n            prev_count AS (\n                -- Replace with your historical count logic or reference table\n                SELECT \n                    CASE \n                        WHEN COUNT(*) = 0 THEN NULL \n                        ELSE COUNT(*) \n                    END as count \n                FROM employees\n            )\n            SELECT \n                CASE\n                    WHEN prev_count.count IS NULL THEN 0\n                    WHEN ABS(current_count.count - prev_count.count) > prev_count.count * 0.2 THEN 1\n                    ELSE 0\n                END\n            FROM current_count, prev_count\n        ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.457964+00:00'}, {'id': 'd7dfcb26-80c0-4aa8-9da5-c93f5e5ec589', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_unique', 'description': 'Check that id values are unique', 'query': '\n                    SELECT COUNT(*) FROM (\n                        SELECT id, COUNT(*) as count \n                        FROM employees \n                        WHERE id IS NOT NULL\n                        GROUP BY id \n                        HAVING COUNT(*) > 1\n                    ) AS duplicates\n                ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.550078+00:00'}, {'id': 'b37396e1-4806-4cc2-bbb8-66789b383f7b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_positive', 'description': 'Ensure id has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE id < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.676877+00:00'}, {'id': '90d3a101-d07a-4818-b73d-e880b889eb4b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_positive', 'description': 'Ensure salary has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.779642+00:00'}, {'id': 'f1fa2612-f11c-44dc-a0d2-92e99cb527d9', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_not_zero', 'description': 'Ensure salary has no zero values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary = 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.863703+00:00'}, {'id': '043839d3-6f15-4eec-9eb5-594168ed1592', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_hire_date_reasonable_past', 'description': 'Ensure hire_date contains no unreasonably old dates', 'query': "SELECT COUNT(*) FROM employees WHERE hire_date < '1970-01-01'", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.952874+00:00'}, {'id': '118a5eef-52b2-4fb4-8e01-20ec1d1d5a0a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_valid_email', 'description': 'Ensure email contains valid email format', 'query': "\n                        SELECT COUNT(*) FROM employees \n                        WHERE email IS NOT NULL \n                        AND email NOT LIKE '%@%.%'\n                    ", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:17.041495+00:00'}, {'id': '7c88158a-f73a-4d2d-8415-36780b52adfd', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_outliers', 'description': 'Check for extreme outliers in id (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(id) as avg_val,\n                            STDDEV(id) as stddev_val\n                        FROM employees\n                        WHERE id IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE id > stats.avg_val + 3 * stats.stddev_val\n                    OR id < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.14637+00:00'}, {'id': 'a7fb7d39-9363-4a6f-a408-44d4860907ef', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_outliers', 'description': 'Check for extreme outliers in salary (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(salary) as avg_val,\n                            STDDEV(salary) as stddev_val\n                        FROM employees\n                        WHERE salary IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE salary > stats.avg_val + 3 * stats.stddev_val\n                    OR salary < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.237429+00:00'}, {'id': '2e0774c0-d639-4261-93b2-cf4cf431375d', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_name_null_rate', 'description': 'Ensure name null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE name IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.347274+00:00'}, {'id': '629c51cc-a297-480a-8264-72cd811f2ce1', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_null_rate', 'description': 'Ensure email null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE email IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.454031+00:00'}, {'id': '97770b45-40ce-45ac-b98e-0b725f9db65a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'distinct_salary', 'description': 'number of distinct salaries', 'query': 'select count(distinct salary) from employees', 'operator': 'greater_than', 'expected_value': 100, 'created_at': '2025-03-04T03:45:01.277238+00:00'}]
2025-03-04 16:49:45,705 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 16:49:45] "GET /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 17:00:24,968 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 17:00:24,968 - supabase_validation_manager - INFO - supabase_validation_manager.py:49 - Supabase Validation Manager initialized
2025-03-04 17:00:24,992 - werkzeug - INFO - _internal.py:224 -  * Running on http://127.0.0.1:5000 (Press CTRL+C to quit)
2025-03-04 17:00:24,996 - werkzeug - INFO - _internal.py:224 -  * Restarting with stat
2025-03-04 17:00:28,408 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 17:00:28,408 - supabase_validation_manager - INFO - supabase_validation_manager.py:49 - Supabase Validation Manager initialized
2025-03-04 17:00:28,422 - werkzeug - WARNING - _internal.py:224 -  * Debugger is active!
2025-03-04 17:00:28,437 - werkzeug - INFO - _internal.py:224 -  * Debugger PIN: 121-941-094
2025-03-04 17:08:43,403 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 17:08:43] "OPTIONS /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 17:08:43,404 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 17:08:43] "OPTIONS /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 17:08:43,638 - root - DEBUG - app.py:114 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 17:08:43,638 - root - DEBUG - app.py:115 - Supabase Service Key: True
2025-03-04 17:08:47,184 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 17:08:47,192 - root - INFO - app.py:127 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 17:08:50,970 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 17:08:51,222 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 17:08:51,303 - root - INFO - app.py:429 - Getting profile history for table employees, limit 15
2025-03-04 17:08:55,919 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 17:08:55,919 - supabase_profile_history - INFO - supabase_profile_history.py:49 - Supabase Profile History Manager initialized
2025-03-04 17:08:59,250 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiling_history?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees&order=collected_at.desc&limit=15 "HTTP/1.1 200 OK"
2025-03-04 17:08:59,346 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 17:08:59] "GET /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 17:08:59,346 - root - DEBUG - app.py:114 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 17:08:59,346 - root - DEBUG - app.py:115 - Supabase Service Key: True
2025-03-04 17:08:59,747 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 17:08:59] "OPTIONS /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 17:08:59,747 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 17:08:59] "OPTIONS /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 17:09:00,063 - root - DEBUG - app.py:114 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 17:09:00,063 - root - DEBUG - app.py:115 - Supabase Service Key: True
2025-03-04 17:09:01,773 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 17:09:01,774 - root - INFO - app.py:127 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 17:09:02,790 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 17:09:02,790 - root - INFO - app.py:127 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 17:09:04,195 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 17:09:04,491 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 17:09:04,492 - root - INFO - app.py:429 - Getting profile history for table employees, limit 15
2025-03-04 17:09:05,090 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 17:09:05,373 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 17:09:05,373 - root - INFO - app.py:255 - Getting validation rules for organization: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees
2025-03-04 17:09:05,373 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 17:09:05,657 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 17:09:05,657 - root - INFO - app.py:257 - Retrieved 13 validation rules
2025-03-04 17:09:05,657 - root - DEBUG - app.py:258 - Rules content: [{'id': 'd62ba05c-31f7-49f9-8fb1-86cc59ff2d10', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_not_empty', 'description': 'Ensure employees table has at least one row', 'query': 'SELECT COUNT(*) FROM employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-03T17:52:54.83168+00:00'}, {'id': 'fd9b0fdb-4fe1-4064-931c-9e04e49f803f', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_row_growth', 'description': 'Detect unusual growth in employees row count (>20% change)', 'query': '\n            WITH current_count AS (\n                SELECT COUNT(*) as count FROM employees\n            ),\n            prev_count AS (\n                -- Replace with your historical count logic or reference table\n                SELECT \n                    CASE \n                        WHEN COUNT(*) = 0 THEN NULL \n                        ELSE COUNT(*) \n                    END as count \n                FROM employees\n            )\n            SELECT \n                CASE\n                    WHEN prev_count.count IS NULL THEN 0\n                    WHEN ABS(current_count.count - prev_count.count) > prev_count.count * 0.2 THEN 1\n                    ELSE 0\n                END\n            FROM current_count, prev_count\n        ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.457964+00:00'}, {'id': 'd7dfcb26-80c0-4aa8-9da5-c93f5e5ec589', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_unique', 'description': 'Check that id values are unique', 'query': '\n                    SELECT COUNT(*) FROM (\n                        SELECT id, COUNT(*) as count \n                        FROM employees \n                        WHERE id IS NOT NULL\n                        GROUP BY id \n                        HAVING COUNT(*) > 1\n                    ) AS duplicates\n                ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.550078+00:00'}, {'id': 'b37396e1-4806-4cc2-bbb8-66789b383f7b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_positive', 'description': 'Ensure id has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE id < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.676877+00:00'}, {'id': '90d3a101-d07a-4818-b73d-e880b889eb4b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_positive', 'description': 'Ensure salary has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.779642+00:00'}, {'id': 'f1fa2612-f11c-44dc-a0d2-92e99cb527d9', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_not_zero', 'description': 'Ensure salary has no zero values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary = 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.863703+00:00'}, {'id': '043839d3-6f15-4eec-9eb5-594168ed1592', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_hire_date_reasonable_past', 'description': 'Ensure hire_date contains no unreasonably old dates', 'query': "SELECT COUNT(*) FROM employees WHERE hire_date < '1970-01-01'", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.952874+00:00'}, {'id': '118a5eef-52b2-4fb4-8e01-20ec1d1d5a0a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_valid_email', 'description': 'Ensure email contains valid email format', 'query': "\n                        SELECT COUNT(*) FROM employees \n                        WHERE email IS NOT NULL \n                        AND email NOT LIKE '%@%.%'\n                    ", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:17.041495+00:00'}, {'id': '7c88158a-f73a-4d2d-8415-36780b52adfd', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_outliers', 'description': 'Check for extreme outliers in id (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(id) as avg_val,\n                            STDDEV(id) as stddev_val\n                        FROM employees\n                        WHERE id IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE id > stats.avg_val + 3 * stats.stddev_val\n                    OR id < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.14637+00:00'}, {'id': 'a7fb7d39-9363-4a6f-a408-44d4860907ef', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_outliers', 'description': 'Check for extreme outliers in salary (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(salary) as avg_val,\n                            STDDEV(salary) as stddev_val\n                        FROM employees\n                        WHERE salary IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE salary > stats.avg_val + 3 * stats.stddev_val\n                    OR salary < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.237429+00:00'}, {'id': '2e0774c0-d639-4261-93b2-cf4cf431375d', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_name_null_rate', 'description': 'Ensure name null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE name IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.347274+00:00'}, {'id': '629c51cc-a297-480a-8264-72cd811f2ce1', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_null_rate', 'description': 'Ensure email null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE email IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.454031+00:00'}, {'id': '97770b45-40ce-45ac-b98e-0b725f9db65a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'distinct_salary', 'description': 'number of distinct salaries', 'query': 'select count(distinct salary) from employees', 'operator': 'greater_than', 'expected_value': 100, 'created_at': '2025-03-04T03:45:01.277238+00:00'}]
2025-03-04 17:09:05,657 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 17:09:05] "GET /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 17:09:05,991 - root - DEBUG - app.py:114 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 17:09:05,991 - root - DEBUG - app.py:115 - Supabase Service Key: True
2025-03-04 17:09:06,804 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 17:09:06,850 - supabase_profile_history - INFO - supabase_profile_history.py:49 - Supabase Profile History Manager initialized
2025-03-04 17:09:09,159 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 17:09:09,160 - root - INFO - app.py:127 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 17:09:09,752 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiling_history?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees&order=collected_at.desc&limit=15 "HTTP/1.1 200 OK"
2025-03-04 17:09:09,828 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 17:09:09] "GET /api/profile-history?table=employees&limit=15 HTTP/1.1" 200 -
2025-03-04 17:09:10,973 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 17:09:11,290 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 17:09:11,292 - root - INFO - app.py:255 - Getting validation rules for organization: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees
2025-03-04 17:09:11,292 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 17:09:11,461 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 17:09:11,461 - root - INFO - app.py:257 - Retrieved 13 validation rules
2025-03-04 17:09:11,461 - root - DEBUG - app.py:258 - Rules content: [{'id': 'd62ba05c-31f7-49f9-8fb1-86cc59ff2d10', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_not_empty', 'description': 'Ensure employees table has at least one row', 'query': 'SELECT COUNT(*) FROM employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-03T17:52:54.83168+00:00'}, {'id': 'fd9b0fdb-4fe1-4064-931c-9e04e49f803f', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_row_growth', 'description': 'Detect unusual growth in employees row count (>20% change)', 'query': '\n            WITH current_count AS (\n                SELECT COUNT(*) as count FROM employees\n            ),\n            prev_count AS (\n                -- Replace with your historical count logic or reference table\n                SELECT \n                    CASE \n                        WHEN COUNT(*) = 0 THEN NULL \n                        ELSE COUNT(*) \n                    END as count \n                FROM employees\n            )\n            SELECT \n                CASE\n                    WHEN prev_count.count IS NULL THEN 0\n                    WHEN ABS(current_count.count - prev_count.count) > prev_count.count * 0.2 THEN 1\n                    ELSE 0\n                END\n            FROM current_count, prev_count\n        ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.457964+00:00'}, {'id': 'd7dfcb26-80c0-4aa8-9da5-c93f5e5ec589', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_unique', 'description': 'Check that id values are unique', 'query': '\n                    SELECT COUNT(*) FROM (\n                        SELECT id, COUNT(*) as count \n                        FROM employees \n                        WHERE id IS NOT NULL\n                        GROUP BY id \n                        HAVING COUNT(*) > 1\n                    ) AS duplicates\n                ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.550078+00:00'}, {'id': 'b37396e1-4806-4cc2-bbb8-66789b383f7b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_positive', 'description': 'Ensure id has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE id < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.676877+00:00'}, {'id': '90d3a101-d07a-4818-b73d-e880b889eb4b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_positive', 'description': 'Ensure salary has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.779642+00:00'}, {'id': 'f1fa2612-f11c-44dc-a0d2-92e99cb527d9', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_not_zero', 'description': 'Ensure salary has no zero values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary = 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.863703+00:00'}, {'id': '043839d3-6f15-4eec-9eb5-594168ed1592', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_hire_date_reasonable_past', 'description': 'Ensure hire_date contains no unreasonably old dates', 'query': "SELECT COUNT(*) FROM employees WHERE hire_date < '1970-01-01'", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.952874+00:00'}, {'id': '118a5eef-52b2-4fb4-8e01-20ec1d1d5a0a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_valid_email', 'description': 'Ensure email contains valid email format', 'query': "\n                        SELECT COUNT(*) FROM employees \n                        WHERE email IS NOT NULL \n                        AND email NOT LIKE '%@%.%'\n                    ", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:17.041495+00:00'}, {'id': '7c88158a-f73a-4d2d-8415-36780b52adfd', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_outliers', 'description': 'Check for extreme outliers in id (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(id) as avg_val,\n                            STDDEV(id) as stddev_val\n                        FROM employees\n                        WHERE id IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE id > stats.avg_val + 3 * stats.stddev_val\n                    OR id < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.14637+00:00'}, {'id': 'a7fb7d39-9363-4a6f-a408-44d4860907ef', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_outliers', 'description': 'Check for extreme outliers in salary (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(salary) as avg_val,\n                            STDDEV(salary) as stddev_val\n                        FROM employees\n                        WHERE salary IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE salary > stats.avg_val + 3 * stats.stddev_val\n                    OR salary < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.237429+00:00'}, {'id': '2e0774c0-d639-4261-93b2-cf4cf431375d', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_name_null_rate', 'description': 'Ensure name null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE name IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.347274+00:00'}, {'id': '629c51cc-a297-480a-8264-72cd811f2ce1', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_null_rate', 'description': 'Ensure email null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE email IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.454031+00:00'}, {'id': '97770b45-40ce-45ac-b98e-0b725f9db65a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'distinct_salary', 'description': 'number of distinct salaries', 'query': 'select count(distinct salary) from employees', 'operator': 'greater_than', 'expected_value': 100, 'created_at': '2025-03-04T03:45:01.277238+00:00'}]
2025-03-04 17:09:11,461 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 17:09:11] "GET /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 17:09:16,653 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 17:09:16] "OPTIONS /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 17:09:16,655 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 17:09:16] "OPTIONS /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 17:09:16,924 - root - DEBUG - app.py:114 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 17:09:16,924 - root - DEBUG - app.py:115 - Supabase Service Key: True
2025-03-04 17:09:18,779 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 17:09:18,779 - root - INFO - app.py:127 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 17:09:20,338 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 17:09:20,522 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 17:09:20,522 - root - INFO - app.py:255 - Getting validation rules for organization: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees
2025-03-04 17:09:20,522 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 17:09:20,742 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 17:09:20,758 - root - INFO - app.py:257 - Retrieved 13 validation rules
2025-03-04 17:09:20,758 - root - DEBUG - app.py:258 - Rules content: [{'id': 'd62ba05c-31f7-49f9-8fb1-86cc59ff2d10', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_not_empty', 'description': 'Ensure employees table has at least one row', 'query': 'SELECT COUNT(*) FROM employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-03T17:52:54.83168+00:00'}, {'id': 'fd9b0fdb-4fe1-4064-931c-9e04e49f803f', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_row_growth', 'description': 'Detect unusual growth in employees row count (>20% change)', 'query': '\n            WITH current_count AS (\n                SELECT COUNT(*) as count FROM employees\n            ),\n            prev_count AS (\n                -- Replace with your historical count logic or reference table\n                SELECT \n                    CASE \n                        WHEN COUNT(*) = 0 THEN NULL \n                        ELSE COUNT(*) \n                    END as count \n                FROM employees\n            )\n            SELECT \n                CASE\n                    WHEN prev_count.count IS NULL THEN 0\n                    WHEN ABS(current_count.count - prev_count.count) > prev_count.count * 0.2 THEN 1\n                    ELSE 0\n                END\n            FROM current_count, prev_count\n        ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.457964+00:00'}, {'id': 'd7dfcb26-80c0-4aa8-9da5-c93f5e5ec589', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_unique', 'description': 'Check that id values are unique', 'query': '\n                    SELECT COUNT(*) FROM (\n                        SELECT id, COUNT(*) as count \n                        FROM employees \n                        WHERE id IS NOT NULL\n                        GROUP BY id \n                        HAVING COUNT(*) > 1\n                    ) AS duplicates\n                ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.550078+00:00'}, {'id': 'b37396e1-4806-4cc2-bbb8-66789b383f7b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_positive', 'description': 'Ensure id has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE id < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.676877+00:00'}, {'id': '90d3a101-d07a-4818-b73d-e880b889eb4b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_positive', 'description': 'Ensure salary has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.779642+00:00'}, {'id': 'f1fa2612-f11c-44dc-a0d2-92e99cb527d9', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_not_zero', 'description': 'Ensure salary has no zero values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary = 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.863703+00:00'}, {'id': '043839d3-6f15-4eec-9eb5-594168ed1592', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_hire_date_reasonable_past', 'description': 'Ensure hire_date contains no unreasonably old dates', 'query': "SELECT COUNT(*) FROM employees WHERE hire_date < '1970-01-01'", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.952874+00:00'}, {'id': '118a5eef-52b2-4fb4-8e01-20ec1d1d5a0a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_valid_email', 'description': 'Ensure email contains valid email format', 'query': "\n                        SELECT COUNT(*) FROM employees \n                        WHERE email IS NOT NULL \n                        AND email NOT LIKE '%@%.%'\n                    ", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:17.041495+00:00'}, {'id': '7c88158a-f73a-4d2d-8415-36780b52adfd', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_outliers', 'description': 'Check for extreme outliers in id (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(id) as avg_val,\n                            STDDEV(id) as stddev_val\n                        FROM employees\n                        WHERE id IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE id > stats.avg_val + 3 * stats.stddev_val\n                    OR id < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.14637+00:00'}, {'id': 'a7fb7d39-9363-4a6f-a408-44d4860907ef', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_outliers', 'description': 'Check for extreme outliers in salary (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(salary) as avg_val,\n                            STDDEV(salary) as stddev_val\n                        FROM employees\n                        WHERE salary IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE salary > stats.avg_val + 3 * stats.stddev_val\n                    OR salary < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.237429+00:00'}, {'id': '2e0774c0-d639-4261-93b2-cf4cf431375d', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_name_null_rate', 'description': 'Ensure name null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE name IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.347274+00:00'}, {'id': '629c51cc-a297-480a-8264-72cd811f2ce1', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_null_rate', 'description': 'Ensure email null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE email IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.454031+00:00'}, {'id': '97770b45-40ce-45ac-b98e-0b725f9db65a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'distinct_salary', 'description': 'number of distinct salaries', 'query': 'select count(distinct salary) from employees', 'operator': 'greater_than', 'expected_value': 100, 'created_at': '2025-03-04T03:45:01.277238+00:00'}]
2025-03-04 17:09:20,768 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 17:09:20] "GET /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 17:09:20,776 - root - DEBUG - app.py:114 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 17:09:20,776 - root - DEBUG - app.py:115 - Supabase Service Key: True
2025-03-04 17:09:22,444 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 17:09:22,444 - root - INFO - app.py:127 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 17:09:24,340 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 17:09:24,641 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 17:09:24,641 - root - INFO - app.py:255 - Getting validation rules for organization: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees
2025-03-04 17:09:24,641 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 17:09:24,741 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 17:09:24,741 - root - INFO - app.py:257 - Retrieved 13 validation rules
2025-03-04 17:09:24,741 - root - DEBUG - app.py:258 - Rules content: [{'id': 'd62ba05c-31f7-49f9-8fb1-86cc59ff2d10', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_not_empty', 'description': 'Ensure employees table has at least one row', 'query': 'SELECT COUNT(*) FROM employees', 'operator': 'greater_than', 'expected_value': 0, 'created_at': '2025-03-03T17:52:54.83168+00:00'}, {'id': 'fd9b0fdb-4fe1-4064-931c-9e04e49f803f', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_employees_row_growth', 'description': 'Detect unusual growth in employees row count (>20% change)', 'query': '\n            WITH current_count AS (\n                SELECT COUNT(*) as count FROM employees\n            ),\n            prev_count AS (\n                -- Replace with your historical count logic or reference table\n                SELECT \n                    CASE \n                        WHEN COUNT(*) = 0 THEN NULL \n                        ELSE COUNT(*) \n                    END as count \n                FROM employees\n            )\n            SELECT \n                CASE\n                    WHEN prev_count.count IS NULL THEN 0\n                    WHEN ABS(current_count.count - prev_count.count) > prev_count.count * 0.2 THEN 1\n                    ELSE 0\n                END\n            FROM current_count, prev_count\n        ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.457964+00:00'}, {'id': 'd7dfcb26-80c0-4aa8-9da5-c93f5e5ec589', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_unique', 'description': 'Check that id values are unique', 'query': '\n                    SELECT COUNT(*) FROM (\n                        SELECT id, COUNT(*) as count \n                        FROM employees \n                        WHERE id IS NOT NULL\n                        GROUP BY id \n                        HAVING COUNT(*) > 1\n                    ) AS duplicates\n                ', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.550078+00:00'}, {'id': 'b37396e1-4806-4cc2-bbb8-66789b383f7b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_positive', 'description': 'Ensure id has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE id < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.676877+00:00'}, {'id': '90d3a101-d07a-4818-b73d-e880b889eb4b', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_positive', 'description': 'Ensure salary has no negative values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary < 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.779642+00:00'}, {'id': 'f1fa2612-f11c-44dc-a0d2-92e99cb527d9', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_not_zero', 'description': 'Ensure salary has no zero values', 'query': 'SELECT COUNT(*) FROM employees WHERE salary = 0', 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.863703+00:00'}, {'id': '043839d3-6f15-4eec-9eb5-594168ed1592', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_hire_date_reasonable_past', 'description': 'Ensure hire_date contains no unreasonably old dates', 'query': "SELECT COUNT(*) FROM employees WHERE hire_date < '1970-01-01'", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:16.952874+00:00'}, {'id': '118a5eef-52b2-4fb4-8e01-20ec1d1d5a0a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_valid_email', 'description': 'Ensure email contains valid email format', 'query': "\n                        SELECT COUNT(*) FROM employees \n                        WHERE email IS NOT NULL \n                        AND email NOT LIKE '%@%.%'\n                    ", 'operator': 'equals', 'expected_value': 0, 'created_at': '2025-03-03T17:59:17.041495+00:00'}, {'id': '7c88158a-f73a-4d2d-8415-36780b52adfd', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_id_outliers', 'description': 'Check for extreme outliers in id (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(id) as avg_val,\n                            STDDEV(id) as stddev_val\n                        FROM employees\n                        WHERE id IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE id > stats.avg_val + 3 * stats.stddev_val\n                    OR id < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.14637+00:00'}, {'id': 'a7fb7d39-9363-4a6f-a408-44d4860907ef', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_salary_outliers', 'description': 'Check for extreme outliers in salary (> 3 std deviations)', 'query': '\n                    WITH stats AS (\n                        SELECT \n                            AVG(salary) as avg_val,\n                            STDDEV(salary) as stddev_val\n                        FROM employees\n                        WHERE salary IS NOT NULL\n                    )\n                    SELECT COUNT(*) FROM employees, stats\n                    WHERE salary > stats.avg_val + 3 * stats.stddev_val\n                    OR salary < stats.avg_val - 3 * stats.stddev_val\n                ', 'operator': 'less_than', 'expected_value': 5, 'created_at': '2025-03-03T17:59:17.237429+00:00'}, {'id': '2e0774c0-d639-4261-93b2-cf4cf431375d', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_name_null_rate', 'description': 'Ensure name null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE name IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.347274+00:00'}, {'id': '629c51cc-a297-480a-8264-72cd811f2ce1', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'check_email_null_rate', 'description': 'Ensure email null rate is below acceptable threshold', 'query': '\n                    SELECT (COUNT(*) FILTER (WHERE email IS NULL) * 100.0 / NULLIF(COUNT(*), 0)) \n                    FROM employees\n                ', 'operator': 'less_than', 'expected_value': 25.0, 'created_at': '2025-03-03T17:59:17.454031+00:00'}, {'id': '97770b45-40ce-45ac-b98e-0b725f9db65a', 'organization_id': '78d4fa8f-2652-45c8-ac8f-251cf8ffc98b', 'table_name': 'employees', 'rule_name': 'distinct_salary', 'description': 'number of distinct salaries', 'query': 'select count(distinct salary) from employees', 'operator': 'greater_than', 'expected_value': 100, 'created_at': '2025-03-04T03:45:01.277238+00:00'}]
2025-03-04 17:09:24,741 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 17:09:24] "GET /api/validations?table=employees HTTP/1.1" 200 -
2025-03-04 17:09:24,891 - werkzeug - INFO - _internal.py:224 - 127.0.0.1 - - [04/Mar/2025 17:09:24] "OPTIONS /api/run-validations HTTP/1.1" 200 -
2025-03-04 17:09:25,207 - root - DEBUG - app.py:114 - Supabase URL: https://aahlbynwdjqboucpjfoo.supabase.co
2025-03-04 17:09:25,207 - root - DEBUG - app.py:115 - Supabase Service Key: True
2025-03-04 17:09:27,736 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/auth/v1/user "HTTP/1.1 200 OK"
2025-03-04 17:09:27,746 - root - INFO - app.py:127 - Token valid for user: 0a2b31f7-ac94-483c-8721-a88f5db9d296
2025-03-04 17:09:31,681 - supabase_manager - INFO - supabase_manager.py:33 - Supabase client initialized
2025-03-04 17:09:31,948 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/profiles?select=organization_id&id=eq.0a2b31f7-ac94-483c-8721-a88f5db9d296 "HTTP/1.1 200 OK"
2025-03-04 17:09:31,950 - root - INFO - app.py:271 - Run validations request: {'connection_string': 'duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi-cloud/backend/my_database.duckdb', 'table': 'employees'}
2025-03-04 17:09:31,950 - root - INFO - app.py:281 - Running validations for org: 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table: employees, connection: duckdb:///C:/Users/mhard/PycharmProjects/sparvidata/sparvi-cloud/backend/my_database.duckdb
2025-03-04 17:09:31,950 - root - INFO - supabase_validation_manager.py:54 - Getting validation rules for org 78d4fa8f-2652-45c8-ac8f-251cf8ffc98b, table employees
2025-03-04 17:09:32,172 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: GET https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_rules?select=%2A&organization_id=eq.78d4fa8f-2652-45c8-ac8f-251cf8ffc98b&table_name=eq.employees "HTTP/1.1 200 OK"
2025-03-04 17:09:32,172 - root - INFO - app.py:286 - Found 13 rules to execute
2025-03-04 17:09:35,577 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 17:09:38,491 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
2025-03-04 17:09:41,099 - httpx._client - DEBUG - _client.py:1022 - HTTP Request: POST https://aahlbynwdjqboucpjfoo.supabase.co/rest/v1/validation_results "HTTP/1.1 201 Created"
